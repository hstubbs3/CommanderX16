ca65 V2.19 - Git 8e6c0c1
Main file   : cx3drc000-basevideo.asm
Current file: cx3drc000-basevideo.asm

000000r 1               .org $080D
00080D  1               .segment "STARTUP"
00080D  1               .segment "INIT"
00080D  1               .segment "ONCE"
00080D  1               .segment "CODE"
00080D  1               
00080D  1  4C 82 0E       jmp start
000810  1               ; RAM Interrupt Vectors
000810  1               IRQVec            = $0314
000810  1               
000810  1               ; VERA
000810  1               VERA_addr_low     = $9F20
000810  1               VERA_addr_high    = $9F21
000810  1               VERA_addr_bank    = $9F22
000810  1               VERA_data0        = $9F23
000810  1               VERA_data1        = $9F24
000810  1               VERA_ctrl         = $9F25
000810  1               VERA_ien          = $9F26
000810  1               VERA_isr          = $9F27
000810  1               VERA_dc_video     = $9F29 ; DCSEL = 0
000810  1               ;   Current Field | Sprites Enable | Layer1 Enable  |Layer0 Enable
000810  1               ; NTSC/RGB: 240P  | NTSC: Chroma Disable / RGB: HV Sync Output Mode
000810  1               
000810  1               VERA_dc_hscale    = $9F2A
000810  1               VERA_dc_vscale    = $9F2B
000810  1               
000810  1               VERA_L0_config    = $9F2D
000810  1               ;   7       6     5   4       3       2             1   0
000810  1               ;   Map Height | Map Width | T256C | Bitmap Mode | Color Depth
000810  1               ;   0 - 32                  0 - 16    0 tiled       0   1bpp mono
000810  1               ;   1 - 64                  1 - 256   1 enabled     1   2bpp 4 color
000810  1               ;   2 - 128                                         2   4bpp 16 color
000810  1               ;   3 - 256                                         3   8bpp 256 color
000810  1               ;   bitmap mode - tilebase points to bitmap data, mapbase not used
000810  1               ;   tile width = 0 is 320 pixels / tile width=1 is 640 pixels.. so could do 4bpp x 320?
000810  1               ;   The palette offset (in 'H-Scroll (11:8)') modifies the color indexes of the bitmap in the same way as in the tile modes.
000810  1               
000810  1               VERA_L0_mapbase   = $9F2E
000810  1               VERA_L0_tilebase  = $9F2F ;   Tile Base Address (16:11) | Tile Height 0-8/1-16 | Tile Width 0-8/1-16
000810  1               VERA_L0_HSCROLL_L = $9F30 ;  H-Scroll (7:0)
000810  1               VERA_L0_HSCROLL_H = $9F31 ;  - H-Scroll (11:8)
000810  1               VERA_L0_VSCROLL_L = $9F32 ;  V-Scroll (7:0)
000810  1               VERA_L0_VSCROLL_H = $9F33 ;  - V-Scroll (11:8)
000810  1               
000810  1               VERA_L1_config    = $9F34
000810  1               VERA_L1_mapbase   = $9F35
000810  1               VERA_L1_tilebase  = $9F36
000810  1               VERA_L1_HSCROLL_L = $9F37 ;  H-Scroll (7:0)
000810  1               VERA_L1_HSCROLL_H = $9F38 ;  - H-Scroll (11:8)
000810  1               VERA_L1_VSCROLL_L = $9F39 ;  V-Scroll (7:0)
000810  1               VERA_L1_VSCROLL_H = $9F3A ;  - V-Scroll (11:8)
000810  1               
000810  1               VSYNC_BIT         = $01
000810  1               
000810  1               ; VRAM Addresses
000810  1               ;   Address range Description
000810  1               ;   $00000 - $1F9BF Video RAM   - 129,424 bytes -> 126K is 129,024 (1F800)
000810  1               ;   $1F9C0 - $1F9FF PSG registers
000810  1               ;   $1FA00 - $1FBFF Palette
000810  1               ;   $1FC00 - $1FFFF Sprite attributes
000810  1               
000810  1               VRAM_layer0_tileA = $00000      ; must be 4K aligned - 25x14 x8x8 = 22,400B   21.875K actually starts at  0   - 21.875K - last 128 bytes unused...
000810  1               VRAM_layer0_map  = $05800       ; must be 512B aligned  32x32 assigned=2K actually using ~32x20           22K  - 24K    -
000810  1               VRAM_layer0_tileB = $06000      ; must be 4K aligned              21.875K                                 24k  - 45.875K
000810  1               
000810  1               VRAM_layer1_map   = $0B800      ; must be 512B aligned  32x32 assigned=2k uses 20 lines -> 1,280 used..   46k  - 47.25  - 768 bytes unused...
000810  1               VRAM_layer1_tile  = $0C000      ; must be 4K aligned . 256*1bpp 8x8 = 2K max                              48K  - 50K
000810  1               
000810  1               VRAM_tex_cache_64 = $0C800      ; space for 64x64 textures.. 4x of these just in case..                   50k  - 66K
000810  1               VRAM_tex_cache_48 = $10800      ; 48x48 textures - 2.25K each.. space for 8x .. 18K                       66k  - 84k
000810  1               VRAM_tex_cache_32 = $15000      ; 32x32 textures - 1k each - space for 16x                                84k  - 100k
000810  1               VRAM_tex_cache_24 = $19000      ; 16x16 textures 256k each - 32x=8k                                       100k - 108k
000810  1               VRAM_UNRESERVED   = $1A000      ; 126K+ used for palette/sprites, so 108K-126K=18K available for hud/effects stuffs..
000810  1               ; sprite starts must be 32byte aligned...
000810  1               ; only can go to 126K ...
000810  1               VRAM_palette      = $1FA00      ;
000810  1               
000810  1               BITMAP_PAL_OFFSET = 0
000810  1               ; constants
000810  1               DISPLAY_SCALE_FOUR    = 32
000810  1               DISPLAY_SCALE_TWO     = 64 ; 2X zoom
000810  1               DISPLAY_SCALE_ONE     = 128 ; 640x480
000810  1               MODE_BITMAP_256BPP = $07
000810  1               MODE_BITMAP_16BPP  = $06
000810  1               MODE_TILE_64_WIDE = $10
000810  1               MODE_T256C = $0D
000810  1               MODE_128x64_T16C = $60 ; 128x64, 16-color text
000810  1               MODE_128x64_T256C = $68 ; 128x64, 256-color text
000810  1               MODE_64x32_T256C = $18
000810  1               MODE_32x32_256BPP = $03
000810  1               MODE_32x32_T16C   = $00
000810  1               LAYER0_ONLY       = $11
000810  1               LAYER01_ENABLE    = $31
000810  1               LAYER1_ONLY       = $21
000810  1               VRAM_bitmap       = $04000
000810  1               LOWER_UPPER       = $C400
000810  1               
000810  1               ; ROM Banks
000810  1               ROM_BANK          = $01
000810  1               BASIC_BANK        = 4
000810  1               CHARSET_BANK      = 6
000810  1               
000810  1               ; Kernal
000810  1               CHROUT            = $FFD2
000810  1               GETIN             = $FFE4
000810  1               CINT              = $FF81
000810  1               
000810  1               ; PETSCII Codes
000810  1               WHITE             = $05
000810  1               RETURN            = $0D
000810  1               SPACE             = $20
000810  1               ZERO_CHAR         = $30
000810  1               SIX_CHAR          = $36
000810  1               NINE_CHAR         = $39
000810  1               C_CHAR            = $43
000810  1               I_CHAR            = $49
000810  1               O_CHAR            = $4F
000810  1               T_CHAR            = $54
000810  1               CLR               = $93
000810  1               
000810  1               ; global data
000810  1  00 00        default_irq_vector:  .addr 0
000812  1  01           VSYNC_counter:       .byte 1
000813  1               ZP_PTR = $22
000813  1               
000813  1               LAYER0A_MAPDATA:
000813  1               LAYER0B_MAPDATA:
000813  1               
000813  1               LAYER1_TILEDATA:
000813  1  00 00 00 00    .byte %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000 ; empty
000817  1  00 00 00 00  
00081B  1               
00081B  1  00             .byte %00000000   ; HEX digits for debug
00081C  1  1E             .byte %00011110
00081D  1  2B             .byte %00101011
00081E  1  4B             .byte %01001011
00081F  1  53             .byte %01010011
000820  1  52             .byte %01010010
000821  1  7C             .byte %01111100
000822  1  00             .byte %00000000
000823  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 1
000827  1  53 52 7C 00  
00082B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 2
00082F  1  53 52 7C 00  
000833  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 3
000837  1  53 52 7C 00  
00083B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 4
00083F  1  53 52 7C 00  
000843  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 5
000847  1  53 52 7C 00  
00084B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 6
00084F  1  53 52 7C 00  
000853  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 7
000857  1  53 52 7C 00  
00085B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 8
00085F  1  53 52 7C 00  
000863  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 9
000867  1  53 52 7C 00  
00086B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; A
00086F  1  53 52 7C 00  
000873  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; B
000877  1  53 52 7C 00  
00087B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; C
00087F  1  53 52 7C 00  
000883  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; D
000887  1  53 52 7C 00  
00088B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; E
00088F  1  53 52 7C 00  
000893  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; F (16)
000897  1  53 52 7C 00  
00089B  1               
00089B  1  FF FF FF FF    .byte %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111 ; filled (17)
00089F  1  FF FF FF FF  
0008A3  1  AA 55 AA 55    .byte %10101010, %01010101, %10101010, %01010101, %10101010, %01010101, %10101010, %01010101 ; 1x1 checkerboard - 18
0008A7  1  AA 55 AA 55  
0008AB  1  00 00 00 00    .byte %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %11111111, %11111111 ; filled line? - 19
0008AF  1  00 00 FF FF  
0008B3  1               
0008B3  1               LAYER1_MAPDATA:
0008B3  1                 ; 32x32 but only populating 32x20
0008B3  1                 ;     0         1       2         3       4         5         6       7         8       9       10        11      12          13        14    15
0008B3  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03 ;
0008B7  1  12 03 12 03  
0008BB  1  12 03 12 03  
0008D3  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 0
0008D7  1  12 03 12 03  
0008DB  1  12 03 12 03  
0008F3  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
0008F7  1  00 00 00 00  
0008FB  1  00 00 00 00  
000913  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 1
000917  1  00 00 00 00  
00091B  1  00 00 00 00  
000933  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000937  1  00 00 00 00  
00093B  1  00 00 00 00  
000953  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 2
000957  1  00 00 00 00  
00095B  1  00 00 00 00  
000973  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000977  1  00 00 00 00  
00097B  1  00 00 00 00  
000993  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 3
000997  1  00 00 00 00  
00099B  1  00 00 00 00  
0009B3  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
0009B7  1  00 00 00 00  
0009BB  1  00 00 00 00  
0009D3  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 4
0009D7  1  00 00 00 00  
0009DB  1  00 00 00 00  
0009F3  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
0009F7  1  00 00 00 00  
0009FB  1  00 00 00 00  
000A13  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 5
000A17  1  00 00 00 00  
000A1B  1  00 00 00 00  
000A33  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000A37  1  00 00 00 00  
000A3B  1  00 00 00 00  
000A53  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 6
000A57  1  00 00 00 00  
000A5B  1  00 00 00 00  
000A73  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000A77  1  00 00 00 00  
000A7B  1  00 00 00 00  
000A93  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 7
000A97  1  00 00 00 00  
000A9B  1  00 00 00 00  
000AB3  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000AB7  1  00 00 00 00  
000ABB  1  00 00 00 00  
000AD3  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 8
000AD7  1  00 00 00 00  
000ADB  1  00 00 00 00  
000AF3  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000AF7  1  00 00 00 00  
000AFB  1  00 00 00 00  
000B13  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 9
000B17  1  00 00 00 00  
000B1B  1  00 00 00 00  
000B33  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000B37  1  00 00 00 00  
000B3B  1  00 00 00 00  
000B53  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 10
000B57  1  00 00 00 00  
000B5B  1  00 00 00 00  
000B73  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000B77  1  00 00 00 00  
000B7B  1  00 00 00 00  
000B93  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 10
000B97  1  00 00 00 00  
000B9B  1  00 00 00 00  
000BB3  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000BB7  1  00 00 00 00  
000BBB  1  00 00 00 00  
000BD3  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 12
000BD7  1  00 00 00 00  
000BDB  1  00 00 00 00  
000BF3  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000BF7  1  00 00 00 00  
000BFB  1  00 00 00 00  
000C13  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 13
000C17  1  00 00 00 00  
000C1B  1  00 00 00 00  
000C33  1  12 03 13 03    .byte $12,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03
000C37  1  13 03 13 03  
000C3B  1  13 03 13 03  
000C53  1  13 03 13 03    .byte $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $13,$03, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 14
000C57  1  13 03 13 03  
000C5B  1  13 03 13 03  
000C73  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000C77  1  00 00 00 00  
000C7B  1  00 00 00 00  
000C93  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 16
000C97  1  00 00 00 00  
000C9B  1  00 00 00 00  
000CB3  1  12 03 00 00    .byte $12,$03, $00,$00, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01
000CB7  1  01 01 01 01  
000CBB  1  01 01 01 01  
000CD3  1  01 01 01 01    .byte $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 17
000CD7  1  01 01 01 01  
000CDB  1  01 01 01 01  
000CF3  1  12 03 00 00    .byte $12,$03, $00,$00, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01
000CF7  1  01 01 01 01  
000CFB  1  01 01 01 01  
000D13  1  01 01 01 01    .byte $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 17
000D17  1  01 01 01 01  
000D1B  1  01 01 01 01  
000D33  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000D37  1  00 00 00 00  
000D3B  1  00 00 00 00  
000D53  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 18
000D57  1  00 00 00 00  
000D5B  1  00 00 00 00  
000D73  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03 ;
000D77  1  12 03 12 03  
000D7B  1  12 03 12 03  
000D93  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 0
000D97  1  12 03 12 03  
000D9B  1  12 03 12 03  
000DB3  1               
000DB3  1               custom_irq_handler:
000DB3  1  AD 27 9F        lda VERA_isr
000DB6  1  29 01           and #VSYNC_BIT
000DB8  1  F0 03           beq @continue ; non-VSYNC IRQ, no tick update
000DBA  1  EE 12 08        inc VSYNC_counter
000DBD  1               @continue:
000DBD  1                  ; continue to default IRQ handler
000DBD  1  6C 10 08        jmp (default_irq_vector)
000DC0  1                  ; RTI will happen after jump
000DC0  1               
000DC0  1               INITIALIZE_VRAM_DATA:
000DC0  1  9C 25 9F       stz VERA_ctrl
000DC3  1                 ;init layer0
000DC3  1  9C 20 9F       stz VERA_addr_low
000DC6  1  A9 58          lda #>VRAM_layer0_map
000DC8  1  8D 21 9F       sta VERA_addr_high
000DCB  1  A9 10          lda #($10 | ^VRAM_layer0_map) ;
000DCD  1  8D 22 9F       sta VERA_addr_bank
000DD0  1  A9 21          lda #33
000DD2  1  A2 BE          ldx #$BE
000DD4  1  A0 02          ldy #$02
000DD6  1                 @init_layer0_map_line0:
000DD6  1  8E 23 9F         stx VERA_data0
000DD9  1  8C 23 9F         sty VERA_data0
000DDC  1  3A               dec a
000DDD  1  D0 F7            BNE @init_layer0_map_line0
000DDF  1  A9 FF          lda #255
000DE1  1  85 22          sta ZP_PTR
000DE3  1  64 23          stz ZP_PTR+1
000DE5  1  A0 0E          ldy #14
000DE7  1  84 24          sty ZP_PTR+2
000DE9  1  18             clc
000DEA  1                 @init_layer0_map_disp_row_loop:
000DEA  1  A0 19            ldy #25
000DEC  1  E6 22            inc ZP_PTR
000DEE  1  A5 22            lda ZP_PTR
000DF0  1  A6 23            ldx ZP_PTR+1
000DF2  1                   @init_layer0_disp_row:
000DF2  1  8D 23 9F           sta VERA_data0
000DF5  1  8E 23 9F           stx VERA_data0
000DF8  1  69 0E              adc #14 ; was 28
000DFA  1  90 02              bcc @no_carry
000DFC  1  E8                 inx
000DFD  1  18                 clc
000DFE  1                   @no_carry:
000DFE  1  88                 dey
000DFF  1  D0 F1              BNE @init_layer0_disp_row
000E01  1  A9 07            lda #7
000E03  1  A2 BE            ldx #$BE
000E05  1  A0 02            ldy #$02
000E07  1                   @zero_rest_row:
000E07  1  8E 23 9F           stx VERA_data0
000E0A  1  8C 23 9F           sty VERA_data0
000E0D  1  3A                 dec a
000E0E  1  D0 F7              BNE @zero_rest_row
000E10  1  C6 24            dec ZP_PTR+2
000E12  1  D0 D6            BNE @init_layer0_map_disp_row_loop
000E14  1  A9 A0          lda #160
000E16  1                 @init_layer1_clear_bottom_rows:
000E16  1  8E 23 9F         stx VERA_data0
000E19  1  8C 23 9F         sty VERA_data0
000E1C  1  3A               dec a
000E1D  1  D0 F7            BNE @init_layer1_clear_bottom_rows
000E1F  1               
000E1F  1                 ; jmp no_tilemap_0A_clear
000E1F  1               
000E1F  1  9C 20 9F       stz VERA_addr_low
000E22  1  9C 21 9F       stz VERA_addr_high
000E25  1  A9 10          lda #$10
000E27  1  8D 22 9F       sta VERA_addr_bank
000E2A  1  A0 58          ldy #88
000E2C  1  A9 00          lda #0
000E2E  1                 @loopA:
000E2E  1                   @loopB:
000E2E  1  8D 23 9F           sta VERA_data0
000E31  1  1A                 inc a
000E32  1  D0 FA              BNE @loopB
000E34  1  88               dey
000E35  1  D0 F7            BNE @loopB
000E37  1               no_tilemap_0A_clear:
000E37  1               
000E37  1  9C 20 9F       stz VERA_addr_low
000E3A  1  A9 C0          lda #>VRAM_layer1_tile ;
000E3C  1  8D 21 9F       sta VERA_addr_high
000E3F  1  A9 10          lda #($10 | ^VRAM_layer1_tile) ;
000E41  1  8D 22 9F       sta VERA_addr_bank
000E44  1  A9 13          lda #<LAYER1_TILEDATA
000E46  1  85 22          sta ZP_PTR
000E48  1  A9 08          lda #>LAYER1_TILEDATA
000E4A  1  85 23          STA ZP_PTR+1
000E4C  1  A2 08          ldx #8
000E4E  1  A0 00          ldy #0
000E50  1                 @init_layer1_tiledata:
000E50  1                   @init_layer1_tiledata_inner:
000E50  1  B1 22              lda (ZP_PTR),y
000E52  1  8D 23 9F           sta VERA_data0
000E55  1  C8                 iny
000E56  1  D0 F8              BNE @init_layer1_tiledata_inner
000E58  1  E6 23            inc ZP_PTR+1
000E5A  1  CA               dex
000E5B  1  D0 F3            BNE @init_layer1_tiledata
000E5D  1  9C 20 9F       stz VERA_addr_low
000E60  1  A9 B8          lda #>VRAM_layer1_map
000E62  1  8D 21 9F       sta VERA_addr_high
000E65  1  A9 10          lda #($10 | ^VRAM_layer1_map) ;
000E67  1  8D 22 9F       sta VERA_addr_bank
000E6A  1  A9 B3          lda #<LAYER1_MAPDATA
000E6C  1  85 22          sta ZP_PTR
000E6E  1  A9 08          lda #>LAYER1_MAPDATA
000E70  1  85 23          sta ZP_PTR+1
000E72  1  A2 05          ldx #5
000E74  1                 @init_layer1_mapdata:
000E74  1                   @init_layer1_mapdata_inner:
000E74  1  B1 22              lda (ZP_PTR),y
000E76  1  8D 23 9F           sta VERA_data0
000E79  1  C8                 iny
000E7A  1  D0 F8              BNE @init_layer1_mapdata_inner
000E7C  1  E6 23            inc ZP_PTR+1
000E7E  1  CA               dex
000E7F  1  D0 F3            BNE @init_layer1_mapdata
000E81  1  60             rts
000E82  1               
000E82  1               
000E82  1               start:
000E82  1                 ; start of program - init globals
000E82  1  AD 14 03       lda IRQVec
000E85  1  8D 10 08       sta default_irq_vector
000E88  1  AD 15 03       lda IRQVec+1
000E8B  1  8D 11 08       sta default_irq_vector+1
000E8E  1               
000E8E  1  9C 29 9F       stz VERA_dc_video   ; disable display
000E91  1  A9 2A          lda #42 ; set scale for bitmap mode
000E93  1  8D 2A 9F       sta VERA_dc_hscale
000E96  1  A9 29          lda #41
000E98  1  8D 2B 9F       sta VERA_dc_vscale
000E9B  1                 ; layer 0 config...
000E9B  1  A9 03          lda #MODE_32x32_256BPP
000E9D  1  8D 2D 9F       sta VERA_L0_config
000EA0  1  A9 2C          lda #(VRAM_layer0_map >> 9)
000EA2  1  8D 2E 9F       sta VERA_L0_mapbase
000EA5  1                 ; lda #(VRAM_layer0_tileA >> 9) ;
000EA5  1                 ; sta VERA_L0_tilebase
000EA5  1  9C 2F 9F       stz VERA_L0_tilebase
000EA8  1  64 00          stz BITMAP_PAL_OFFSET ; palette offset 0
000EAA  1                 ;layer 1 config
000EAA  1  A9 00          lda #MODE_32x32_T16C
000EAC  1  8D 34 9F       sta VERA_L1_config
000EAF  1  A9 5C          lda #(VRAM_layer1_map >> 9)
000EB1  1  8D 35 9F       sta VERA_L1_mapbase
000EB4  1  A9 60          lda #(VRAM_layer1_tile>>9)
000EB6  1  8D 36 9F       sta VERA_L1_tilebase
000EB9  1  A9 01          lda #1
000EBB  1  8D 31 9F       sta VERA_L0_HSCROLL_H
000EBE  1  8D 33 9F       sta VERA_L0_VSCROLL_H
000EC1  1  8D 38 9F       sta VERA_L1_HSCROLL_H
000EC4  1  8D 3A 9F       sta VERA_L1_VSCROLL_H
000EC7  1  A9 03          lda #3
000EC9  1  8D 30 9F       sta VERA_L0_HSCROLL_L
000ECC  1  8D 32 9F       sta VERA_L0_VSCROLL_L
000ECF  1  8D 37 9F       sta VERA_L1_HSCROLL_L
000ED2  1  8D 39 9F       sta VERA_L1_VSCROLL_L
000ED5  1                 ; load initial tile data
000ED5  1  20 C0 0D       jsr INITIALIZE_VRAM_DATA;
000ED8  1               
000ED8  1                 ; enable layers and start drawing
000ED8  1  9C 25 9F       stz VERA_ctrl
000EDB  1  A9 31          lda #LAYER01_ENABLE
000EDD  1                 ;lda #LAYER0_ONLY ; for testing
000EDD  1                 ;lda #LAYER1_ONLY
000EDD  1  8D 29 9F       sta VERA_dc_video
000EE0  1               
000EE0  1               ;jmp no_interrupt
000EE0  1                 ; overwrite RAM IRQ vector with custom handler address
000EE0  1  78             sei ; disable IRQ while vector is changing
000EE1  1  A9 B3          lda #<custom_irq_handler
000EE3  1  8D 14 03       sta IRQVec
000EE6  1  A9 0D          lda #>custom_irq_handler
000EE8  1  8D 15 03       sta IRQVec+1
000EEB  1  A9 01          lda #VSYNC_BIT ; make VERA only generate VSYNC IRQs
000EED  1  8D 26 9F       sta VERA_ien
000EF0  1  58             cli ; enable IRQ now that vector is properly set
000EF1  1               
000EF1  1               
000EF1  1                 ; draw stuff
000EF1  1               
000EF1  1                 ; main loop here...
000EF1  1               @check_keyboard:
000EF1  1                  ; poll keyboard for input
000EF1  1  20 E4 FF        jsr GETIN
000EF4  1  C9 00           cmp #0
000EF6  1  F0 F9           beq @check_keyboard
000EF8  1                  ;cmp #SPACE
000EF8  1                  ;bne @check_keyboard
000EF8  1                  ;cmp #RETURN
000EF8  1                  ;BNE @check_keyboard
000EF8  1               
000EF8  1               cleanup_and_exit:
000EF8  1                  ; TODO - somehow reset to BASIC ?
000EF8  1               
000EF8  1                  ; restore default IRQ vector
000EF8  1  78              sei
000EF9  1  AD 10 08        lda default_irq_vector
000EFC  1  8D 14 03        sta IRQVec
000EFF  1  AD 11 08        lda default_irq_vector+1
000F02  1  8D 15 03        sta IRQVec+1
000F05  1  58              cli
000F06  1  20 81 FF        jsr CINT
000F09  1  60              rts
000F0A  1               
000F0A  1               no_interrupt:
000F0A  1               @check_keyboard:
000F0A  1                  ; poll keyboard for input
000F0A  1  20 E4 FF        jsr GETIN
000F0D  1  C9 00           cmp #0
000F0F  1  F0 F9           beq @check_keyboard
000F11  1               end:
000F11  1  20 81 FF       jsr CINT
000F14  1  60             rts
000F14  1               
