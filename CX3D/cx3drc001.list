ca65 V2.19 - Git 8e6c0c1
Main file   : cx3drc001-raycaster_base.asm
Current file: cx3drc001-raycaster_base.asm

000000r 1               .org $080D
00080D  1               .segment "STARTUP"
00080D  1               .segment "INIT"
00080D  1               .segment "ONCE"
00080D  1               .segment "CODE"
00080D  1               
00080D  1  4C FB 0E       jmp start
000810  1               ; RAM Interrupt Vectors
000810  1               IRQVec            = $0314
000810  1               
000810  1               ; VERA
000810  1               VERA_addr_low     = $9F20
000810  1               VERA_addr_high    = $9F21
000810  1               VERA_addr_bank    = $9F22
000810  1               VERA_data0        = $9F23
000810  1               VERA_data1        = $9F24
000810  1               VERA_ctrl         = $9F25
000810  1               VERA_ien          = $9F26
000810  1               VERA_isr          = $9F27
000810  1               VERA_dc_video     = $9F29 ; DCSEL = 0
000810  1               ;   Current Field | Sprites Enable | Layer1 Enable  |Layer0 Enable
000810  1               ; NTSC/RGB: 240P  | NTSC: Chroma Disable / RGB: HV Sync Output Mode
000810  1               
000810  1               VERA_dc_hscale    = $9F2A
000810  1               VERA_dc_vscale    = $9F2B
000810  1               
000810  1               VERA_L0_config    = $9F2D
000810  1               ;   7       6     5   4       3       2             1   0
000810  1               ;   Map Height | Map Width | T256C | Bitmap Mode | Color Depth
000810  1               ;   0 - 32                  0 - 16    0 tiled       0   1bpp mono
000810  1               ;   1 - 64                  1 - 256   1 enabled     1   2bpp 4 color
000810  1               ;   2 - 128                                         2   4bpp 16 color
000810  1               ;   3 - 256                                         3   8bpp 256 color
000810  1               ;   bitmap mode - tilebase points to bitmap data, mapbase not used
000810  1               ;   tile width = 0 is 320 pixels / tile width=1 is 640 pixels.. so could do 4bpp x 320?
000810  1               ;   The palette offset (in 'H-Scroll (11:8)') modifies the color indexes of the bitmap in the same way as in the tile modes.
000810  1               
000810  1               VERA_L0_mapbase   = $9F2E
000810  1               VERA_L0_tilebase  = $9F2F ;   Tile Base Address (16:11) | Tile Height 0-8/1-16 | Tile Width 0-8/1-16
000810  1               VERA_L0_HSCROLL_L = $9F30 ;  H-Scroll (7:0)
000810  1               VERA_L0_HSCROLL_H = $9F31 ;  - H-Scroll (11:8)
000810  1               VERA_L0_VSCROLL_L = $9F32 ;  V-Scroll (7:0)
000810  1               VERA_L0_VSCROLL_H = $9F33 ;  - V-Scroll (11:8)
000810  1               
000810  1               VERA_L1_config    = $9F34
000810  1               VERA_L1_mapbase   = $9F35
000810  1               VERA_L1_tilebase  = $9F36
000810  1               VERA_L1_HSCROLL_L = $9F37 ;  H-Scroll (7:0)
000810  1               VERA_L1_HSCROLL_H = $9F38 ;  - H-Scroll (11:8)
000810  1               VERA_L1_VSCROLL_L = $9F39 ;  V-Scroll (7:0)
000810  1               VERA_L1_VSCROLL_H = $9F3A ;  - V-Scroll (11:8)
000810  1               
000810  1               VSYNC_BIT         = $01
000810  1               
000810  1               ; VRAM Addresses
000810  1               ;   Address range Description
000810  1               ;   $00000 - $1F9BF Video RAM   - 129,424 bytes -> 126K is 129,024 (1F800)
000810  1               ;   $1F9C0 - $1F9FF PSG registers
000810  1               ;   $1FA00 - $1FBFF Palette
000810  1               ;   $1FC00 - $1FFFF Sprite attributes
000810  1               
000810  1               VRAM_RC_layer_tileA = $00000      ; must be 4K aligned - 25x14 x8x8 = 22,400B   21.875K actually starts at  0   - 21.875K - last 128 bytes unused...
000810  1               VRAM_RC_layer_map  = $05800       ; must be 512B aligned  32x32 assigned=2K actually using ~32x20           22K  - 24K    -
000810  1               VRAM_RC_layer_tileB = $06000      ; must be 4K aligned              21.875K                                 24k  - 45.875K
000810  1               RC_ZERO_TILE=$015E
000810  1               VRAM_HUD_layer_map   = $0B800      ; must be 512B aligned  32x32 assigned=2k uses 20 lines -> 1,280 used..   46k  - 47.25  - 768 bytes unused...
000810  1               VRAM_HUD_layer_tile  = $0C000      ; must be 4K aligned . 256*1bpp 8x8 = 2K max                              48K  - 50K
000810  1               
000810  1               VRAM_tex_cache_64 = $0C800      ; space for 64x64 textures.. 4x of these just in case..                   50k  - 66K
000810  1               VRAM_tex_cache_48 = $10800      ; 48x48 textures - 2.25K each.. space for 8x .. 18K                       66k  - 84k
000810  1               VRAM_tex_cache_32 = $15000      ; 32x32 textures - 1k each - space for 16x                                84k  - 100k
000810  1               VRAM_tex_cache_24 = $19000      ; 16x16 textures 256k each - 32x=8k                                       100k - 108k
000810  1               VRAM_UNRESERVED   = $1A000      ; 126K+ used for palette/sprites, so 108K-126K=18K available for hud/effects stuffs..
000810  1               ; sprite starts must be 32byte aligned...
000810  1               ; only can go to 126K ...
000810  1               VRAM_palette      = $1FA00      ;
000810  1               
000810  1               BITMAP_PAL_OFFSET = 0
000810  1               ; constants
000810  1               DISPLAY_SCALE_FOUR    = 32
000810  1               DISPLAY_SCALE_TWO     = 64 ; 2X zoom
000810  1               DISPLAY_SCALE_ONE     = 128 ; 640x480
000810  1               MODE_BITMAP_256BPP = $07
000810  1               MODE_BITMAP_16BPP  = $06
000810  1               MODE_TILE_64_WIDE = $10
000810  1               MODE_T256C = $0D
000810  1               MODE_128x64_T16C = $60 ; 128x64, 16-color text
000810  1               MODE_128x64_T256C = $68 ; 128x64, 256-color text
000810  1               MODE_64x32_T256C = $18
000810  1               MODE_32x32_256BPP = $03
000810  1               MODE_32x32_T16C   = $00
000810  1               LAYER0_ONLY       = $11
000810  1               LAYER01_ENABLE    = $31
000810  1               LAYER1_ONLY       = $21
000810  1               VRAM_bitmap       = $04000
000810  1               LOWER_UPPER       = $C400
000810  1               
000810  1               ; ROM Banks
000810  1               ROM_BANK          = $01
000810  1               BASIC_BANK        = 4
000810  1               CHARSET_BANK      = 6
000810  1               RAM_BANK          = $00
000810  1               KERNAL_RAM_BANK   = $00
000810  1               
000810  1               MAP_RAM_BANK      = $01
000810  1               BANKED_RAM_HIGH   = $A0
000810  1               
000810  1               ; Kernal
000810  1               CHROUT            = $FFD2
000810  1               GETIN             = $FFE4
000810  1               CINT              = $FF81
000810  1               
000810  1               ; PETSCII Codes
000810  1               WHITE             = $05
000810  1               RETURN            = $0D
000810  1               SPACE             = $20
000810  1               ZERO_CHAR         = $30
000810  1               SIX_CHAR          = $36
000810  1               NINE_CHAR         = $39
000810  1               C_CHAR            = $43
000810  1               I_CHAR            = $49
000810  1               O_CHAR            = $4F
000810  1               T_CHAR            = $54
000810  1               CLR               = $93
000810  1               CHAR_UP           = $91
000810  1               CHAR_DOWN         = $11
000810  1               CHAR_LEFT         = $9D
000810  1               CHAR_RIGHT        = $1D
000810  1               
000810  1               ; global data
000810  1               
000810  1  00 00        default_irq_vector:  .addr 0
000812  1  01           VSYNC_counter:       .byte 1
000813  1  80           PLAYER_X_SUB: .byte   $80
000814  1  01           PLAYER_X:     .byte   $01 ; (1,14) on the small test map..
000815  1  80           PLAYER_Y_SUB:  .byte   $80
000816  1  0E           PLAYER_Y:     .byte   $0E
000817  1  20           PLAYER_ANGLE:        .byte 32 ; facing NorthEast
000818  1               
000818  1               ZP_PTR = $22
000818  1               
000818  1               HUD_layer_TILEDATA:
000818  1  00 00 00 00    .byte %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000 ; empty
00081C  1  00 00 00 00  
000820  1               
000820  1  00             .byte %00000000   ; HEX digits for debug
000821  1  1E             .byte %00011110
000822  1  2B             .byte %00101011
000823  1  4B             .byte %01001011
000824  1  53             .byte %01010011
000825  1  52             .byte %01010010
000826  1  7C             .byte %01111100
000827  1  00             .byte %00000000
000828  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 1
00082C  1  53 52 7C 00  
000830  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 2
000834  1  53 52 7C 00  
000838  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 3
00083C  1  53 52 7C 00  
000840  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 4
000844  1  53 52 7C 00  
000848  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 5
00084C  1  53 52 7C 00  
000850  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 6
000854  1  53 52 7C 00  
000858  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 7
00085C  1  53 52 7C 00  
000860  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 8
000864  1  53 52 7C 00  
000868  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 9
00086C  1  53 52 7C 00  
000870  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; A
000874  1  53 52 7C 00  
000878  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; B
00087C  1  53 52 7C 00  
000880  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; C
000884  1  53 52 7C 00  
000888  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; D
00088C  1  53 52 7C 00  
000890  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; E
000894  1  53 52 7C 00  
000898  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; F (16)
00089C  1  53 52 7C 00  
0008A0  1               
0008A0  1  FF FF FF FF    .byte %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111 ; filled (17)
0008A4  1  FF FF FF FF  
0008A8  1  AA 55 AA 55    .byte %10101010, %01010101, %10101010, %01010101, %10101010, %01010101, %10101010, %01010101 ; 1x1 checkerboard - 18
0008AC  1  AA 55 AA 55  
0008B0  1                 ; 19 - floor / ceiling gradients
0008B0  1                 ; is like fade between two colors ..
0008B0  1                 ;    100% color0 7/8 ...    6/8(3/4)    5/8
0008B0  1  00 01 44 92    .byte %00000000, %00000001, %01000100, %10010010, %01010101, %10110110, %11011011, %01111111
0008B4  1  55 B6 DB 7F  
0008B8  1               
0008B8  1               HUD_layer_MAPDATA:
0008B8  1                 ; 32x32 but only populating 32x20
0008B8  1                 ;     0         1       2         3       4         5         6       7         8       9       10        11      12          13        14    15
0008B8  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03 ;
0008BC  1  12 03 12 03  
0008C0  1  12 03 12 03  
0008D8  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 0
0008DC  1  12 03 12 03  
0008E0  1  12 03 12 03  
0008F8  1               
0008F8  1  12 03 13 11    .byte $12,$03, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11
0008FC  1  13 11 13 11  
000900  1  13 11 13 11  
000918  1  13 11 13 11    .byte $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 1
00091C  1  13 11 13 11  
000920  1  13 11 13 11  
000938  1               
000938  1  12 03 13 11    .byte $12,$03, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11
00093C  1  13 11 13 11  
000940  1  13 11 13 11  
000958  1  13 11 13 11    .byte $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 2
00095C  1  13 11 13 11  
000960  1  13 11 13 11  
000978  1               
000978  1  12 03 13 1F    .byte $12,$03, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F
00097C  1  13 1F 13 1F  
000980  1  13 1F 13 1F  
000998  1  13 1F 13 1F    .byte $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 3
00099C  1  13 1F 13 1F  
0009A0  1  13 1F 13 1F  
0009B8  1               
0009B8  1  12 03 13 FC    .byte $12,$03, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC
0009BC  1  13 FC 13 FC  
0009C0  1  13 FC 13 FC  
0009D8  1  13 FC 13 FC    .byte $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 4
0009DC  1  13 FC 13 FC  
0009E0  1  13 FC 13 FC  
0009F8  1               
0009F8  1  12 03 13 CB    .byte $12,$03, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB
0009FC  1  13 CB 13 CB  
000A00  1  13 CB 13 CB  
000A18  1  13 CB 13 CB    .byte $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 5
000A1C  1  13 CB 13 CB  
000A20  1  13 CB 13 CB  
000A38  1               
000A38  1  12 03 13 BB    .byte $12,$03, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB
000A3C  1  13 BB 13 BB  
000A40  1  13 BB 13 BB  
000A58  1  13 BB 13 BB    .byte $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 6
000A5C  1  13 BB 13 BB  
000A60  1  13 BB 13 BB  
000A78  1               
000A78  1  12 03 13 BB    .byte $12,$03, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB
000A7C  1  13 BB 13 BB  
000A80  1  13 BB 13 BB  
000A98  1  13 BB 13 BB    .byte $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 7
000A9C  1  13 BB 13 BB  
000AA0  1  13 BB 13 BB  
000AB8  1               
000AB8  1  12 03 13 99    .byte $12,$03, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99
000ABC  1  13 99 13 99  
000AC0  1  13 99 13 99  
000AD8  1  13 99 13 99    .byte $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;  line 8
000ADC  1  13 99 13 99  
000AE0  1  13 99 13 99  
000AF8  1               
000AF8  1  12 03 13 99    .byte $12,$03, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99
000AFC  1  13 99 13 99  
000B00  1  13 99 13 99  
000B18  1  13 99 13 99    .byte $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;  line 9
000B1C  1  13 99 13 99  
000B20  1  13 99 13 99  
000B38  1               
000B38  1  12 03 13 98    .byte $12,$03, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98
000B3C  1  13 98 13 98  
000B40  1  13 98 13 98  
000B58  1  13 98 13 98    .byte $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;  line 10
000B5C  1  13 98 13 98  
000B60  1  13 98 13 98  
000B78  1               
000B78  1  12 03 13 88    .byte $12,$03, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88
000B7C  1  13 88 13 88  
000B80  1  13 88 13 88  
000B98  1  13 88 13 88    .byte $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;
000B9C  1  13 88 13 88  
000BA0  1  13 88 13 88  
000BB8  1  12 03 13 87    .byte $12,$03, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87 ;
000BBC  1  13 87 13 87  
000BC0  1  13 87 13 87  
000BD8  1  13 87 13 87    .byte $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 12
000BDC  1  13 87 13 87  
000BE0  1  13 87 13 87  
000BF8  1               
000BF8  1  12 03 13 77    .byte $12,$03, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77
000BFC  1  13 77 13 77  
000C00  1  13 77 13 77  
000C18  1  13 77 13 77    .byte $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 13
000C1C  1  13 77 13 77  
000C20  1  13 77 13 77  
000C38  1               
000C38  1  12 03 13 77    .byte $12,$03, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77
000C3C  1  13 77 13 77  
000C40  1  13 77 13 77  
000C58  1  13 77 13 77    .byte $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 14
000C5C  1  13 77 13 77  
000C60  1  13 77 13 77  
000C78  1               
000C78  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000C7C  1  00 00 00 00  
000C80  1  00 00 00 00  
000C98  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 15
000C9C  1  00 00 00 00  
000CA0  1  00 00 00 00  
000CB8  1  12 03 00 00    .byte $12,$03, $00,$00, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01
000CBC  1  01 01 01 01  
000CC0  1  01 01 01 01  
000CD8  1  01 01 01 01    .byte $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 16
000CDC  1  01 01 01 01  
000CE0  1  01 01 01 01  
000CF8  1  12 03 00 00    .byte $12,$03, $00,$00, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01
000CFC  1  01 01 01 01  
000D00  1  01 01 01 01  
000D18  1  01 01 01 01    .byte $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 17
000D1C  1  01 01 01 01  
000D20  1  01 01 01 01  
000D38  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000D3C  1  00 00 00 00  
000D40  1  00 00 00 00  
000D58  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 18
000D5C  1  00 00 00 00  
000D60  1  00 00 00 00  
000D78  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03 ;
000D7C  1  12 03 12 03  
000D80  1  12 03 12 03  
000D98  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 19
000D9C  1  12 03 12 03  
000DA0  1  12 03 12 03  
000DB8  1               
000DB8  1               custom_irq_handler:
000DB8  1  AD 27 9F        lda VERA_isr
000DBB  1  29 01           and #VSYNC_BIT
000DBD  1  F0 03           beq @continue ; non-VSYNC IRQ, no tick update
000DBF  1  EE 12 08        inc VSYNC_counter
000DC2  1               @continue:
000DC2  1                  ; continue to default IRQ handler
000DC2  1  6C 10 08        jmp (default_irq_vector)
000DC5  1                  ; RTI will happen after jump
000DC5  1               
000DC5  1               INITIALIZE_VRAM_DATA:
000DC5  1  9C 25 9F       stz VERA_ctrl
000DC8  1                 ;init layer0
000DC8  1  9C 20 9F       stz VERA_addr_low
000DCB  1  A9 58          lda #>VRAM_RC_layer_map
000DCD  1  8D 21 9F       sta VERA_addr_high
000DD0  1  A9 10          lda #($10 | ^VRAM_RC_layer_map) ;
000DD2  1  8D 22 9F       sta VERA_addr_bank
000DD5  1  A9 21          lda #33
000DD7  1  A2 5E          ldx #$5E
000DD9  1  A0 01          ldy #$01
000DDB  1                 @init_layer0_map_line0:
000DDB  1  8E 23 9F         stx VERA_data0
000DDE  1  8C 23 9F         sty VERA_data0
000DE1  1  3A               dec a
000DE2  1  D0 F7            BNE @init_layer0_map_line0
000DE4  1  A9 FF          lda #255
000DE6  1  85 22          sta ZP_PTR
000DE8  1  64 23          stz ZP_PTR+1
000DEA  1  A0 0E          ldy #14
000DEC  1  84 24          sty ZP_PTR+2
000DEE  1  18             clc
000DEF  1                 @init_layer0_map_disp_row_loop:
000DEF  1  A0 19            ldy #25
000DF1  1  E6 22            inc ZP_PTR
000DF3  1  A5 22            lda ZP_PTR
000DF5  1  A6 23            ldx ZP_PTR+1
000DF7  1                   @init_layer0_disp_row:
000DF7  1  8D 23 9F           sta VERA_data0
000DFA  1  8E 23 9F           stx VERA_data0
000DFD  1  69 0E              adc #14 ; was 28
000DFF  1  90 02              bcc @no_carry
000E01  1  E8                 inx
000E02  1  18                 clc
000E03  1                   @no_carry:
000E03  1  88                 dey
000E04  1  D0 F1              BNE @init_layer0_disp_row
000E06  1  A9 07            lda #7
000E08  1  A2 5E            ldx #$5E
000E0A  1  A0 01            ldy #$01
000E0C  1                   @zero_rest_row:
000E0C  1  8E 23 9F           stx VERA_data0
000E0F  1  8C 23 9F           sty VERA_data0
000E12  1  3A                 dec a
000E13  1  D0 F7              BNE @zero_rest_row
000E15  1  C6 24            dec ZP_PTR+2
000E17  1  D0 D6            BNE @init_layer0_map_disp_row_loop
000E19  1  A9 A0          lda #160
000E1B  1                 @init_layer1_clear_bottom_rows:
000E1B  1  8E 23 9F         stx VERA_data0
000E1E  1  8C 23 9F         sty VERA_data0
000E21  1  3A               dec a
000E22  1  D0 F7            BNE @init_layer1_clear_bottom_rows
000E24  1               
000E24  1                 ; jmp no_tilemap_0A_clear
000E24  1                 ; zero out RC layer
000E24  1  9C 20 9F       stz VERA_addr_low
000E27  1  9C 21 9F       stz VERA_addr_high
000E2A  1  A9 10          lda #$10
000E2C  1  8D 22 9F       sta VERA_addr_bank
000E2F  1  A0 58          ldy #88
000E31  1  A9 00          lda #0
000E33  1  A2 01          ldx #1
000E35  1  18             clc
000E36  1                 @loopA:
000E36  1                   @loopB:
000E36  1                     ; simple loop to zero out..
000E36  1                     ; stz VERA_data0
000E36  1                     ; inc a
000E36  1               
000E36  1                     ; draw a 4x4 grid...
000E36  1  9C 23 9F           stz VERA_data0  ; one tile row
000E39  1  8E 23 9F           stx VERA_data0
000E3C  1  9C 23 9F           stz VERA_data0
000E3F  1  9C 23 9F           stz VERA_data0
000E42  1  9C 23 9F           stz VERA_data0
000E45  1  8E 23 9F           stx VERA_data0
000E48  1  9C 23 9F           stz VERA_data0
000E4B  1  9C 23 9F           stz VERA_data0
000E4E  1               
000E4E  1  8E 23 9F           stx VERA_data0  ; 2 tile row
000E51  1  8E 23 9F           stx VERA_data0
000E54  1  8E 23 9F           stx VERA_data0
000E57  1  8E 23 9F           stx VERA_data0
000E5A  1  8E 23 9F           stx VERA_data0
000E5D  1  8E 23 9F           stx VERA_data0
000E60  1  8E 23 9F           stx VERA_data0
000E63  1  8E 23 9F           stx VERA_data0
000E66  1               
000E66  1  9C 23 9F           stz VERA_data0  ; 3 tile row
000E69  1  8E 23 9F           stx VERA_data0
000E6C  1  9C 23 9F           stz VERA_data0
000E6F  1  9C 23 9F           stz VERA_data0
000E72  1  9C 23 9F           stz VERA_data0
000E75  1  8E 23 9F           stx VERA_data0
000E78  1  9C 23 9F           stz VERA_data0
000E7B  1  9C 23 9F           stz VERA_data0
000E7E  1               
000E7E  1  9C 23 9F           stz VERA_data0  ; 4 tile row
000E81  1  8E 23 9F           stx VERA_data0
000E84  1  9C 23 9F           stz VERA_data0
000E87  1  9C 23 9F           stz VERA_data0
000E8A  1  9C 23 9F           stz VERA_data0
000E8D  1  8E 23 9F           stx VERA_data0
000E90  1  9C 23 9F           stz VERA_data0
000E93  1  9C 23 9F           stz VERA_data0
000E96  1  69 20              adc #32 ; 32 pixels drawn...
000E98  1  D0 9C              BNE @loopB
000E9A  1  18               clc
000E9B  1  88               dey
000E9C  1  D0 98            BNE @loopB
000E9E  1  A9 80            lda #$80
000EA0  1  8D 20 9F         sta VERA_addr_low
000EA3  1  A9 57            lda #$57
000EA5  1  8D 21 9F         sta VERA_addr_high
000EA8  1  A9 40            lda #64
000EAA  1                   @clear_tile_15E:
000EAA  1  9C 23 9F           stz VERA_data0
000EAD  1  3A                 dec a
000EAE  1  D0 FA              BNE @clear_tile_15E
000EB0  1               
000EB0  1               no_tilemap_0A_clear:
000EB0  1               
000EB0  1  9C 20 9F       stz VERA_addr_low
000EB3  1  A9 C0          lda #>VRAM_HUD_layer_tile ;
000EB5  1  8D 21 9F       sta VERA_addr_high
000EB8  1  A9 10          lda #($10 | ^VRAM_HUD_layer_tile) ;
000EBA  1  8D 22 9F       sta VERA_addr_bank
000EBD  1  A9 18          lda #<HUD_layer_TILEDATA
000EBF  1  85 22          sta ZP_PTR
000EC1  1  A9 08          lda #>HUD_layer_TILEDATA
000EC3  1  85 23          STA ZP_PTR+1
000EC5  1  A2 08          ldx #8
000EC7  1  A0 00          ldy #0
000EC9  1                 @init_layer1_tiledata:
000EC9  1                   @init_layer1_tiledata_inner:
000EC9  1  B1 22              lda (ZP_PTR),y
000ECB  1  8D 23 9F           sta VERA_data0
000ECE  1  C8                 iny
000ECF  1  D0 F8              BNE @init_layer1_tiledata_inner
000ED1  1  E6 23            inc ZP_PTR+1
000ED3  1  CA               dex
000ED4  1  D0 F3            BNE @init_layer1_tiledata
000ED6  1  9C 20 9F       stz VERA_addr_low
000ED9  1  A9 B8          lda #>VRAM_HUD_layer_map
000EDB  1  8D 21 9F       sta VERA_addr_high
000EDE  1  A9 10          lda #($10 | ^VRAM_HUD_layer_map) ;
000EE0  1  8D 22 9F       sta VERA_addr_bank
000EE3  1  A9 B8          lda #<HUD_layer_MAPDATA
000EE5  1  85 22          sta ZP_PTR
000EE7  1  A9 08          lda #>HUD_layer_MAPDATA
000EE9  1  85 23          sta ZP_PTR+1
000EEB  1  A2 05          ldx #5
000EED  1                 @init_layer1_mapdata:
000EED  1                   @init_layer1_mapdata_inner:
000EED  1  B1 22              lda (ZP_PTR),y
000EEF  1  8D 23 9F           sta VERA_data0
000EF2  1  C8                 iny
000EF3  1  D0 F8              BNE @init_layer1_mapdata_inner
000EF5  1  E6 23            inc ZP_PTR+1
000EF7  1  CA               dex
000EF8  1  D0 F3            BNE @init_layer1_mapdata
000EFA  1  60             rts
000EFB  1               
000EFB  1               
000EFB  1               start:
000EFB  1                 ; start of program - init globals
000EFB  1  AD 14 03       lda IRQVec
000EFE  1  8D 10 08       sta default_irq_vector
000F01  1  AD 15 03       lda IRQVec+1
000F04  1  8D 11 08       sta default_irq_vector+1
000F07  1               
000F07  1  9C 29 9F       stz VERA_dc_video   ; disable display
000F0A  1  A9 2B          lda #43 ; set scale for bitmap mode
000F0C  1  8D 2A 9F       sta VERA_dc_hscale
000F0F  1  A9 2A          lda #42
000F11  1  8D 2B 9F       sta VERA_dc_vscale
000F14  1                 ; layer 0 config...
000F14  1  A9 03          lda #MODE_32x32_256BPP
000F16  1  8D 34 9F       sta VERA_L1_config
000F19  1  A9 2C          lda #(VRAM_RC_layer_map >> 9)
000F1B  1  8D 35 9F       sta VERA_L1_mapbase
000F1E  1                 ; lda #(VRAM_layer0_tileA >> 9) ;
000F1E  1                 ; sta VERA_L0_tilebase
000F1E  1  9C 36 9F       stz VERA_L1_tilebase
000F21  1  64 00          stz BITMAP_PAL_OFFSET ; palette offset 0
000F23  1                 ;layer 1 config
000F23  1  A9 00          lda #MODE_32x32_T16C
000F25  1  8D 2D 9F       sta VERA_L0_config
000F28  1  A9 5C          lda #(VRAM_HUD_layer_map >> 9)
000F2A  1  8D 2E 9F       sta VERA_L0_mapbase
000F2D  1  A9 60          lda #(VRAM_HUD_layer_tile>>9)
000F2F  1  8D 2F 9F       sta VERA_L0_tilebase
000F32  1               
000F32  1  A9 01          lda #1
000F34  1  8D 31 9F       sta VERA_L0_HSCROLL_H
000F37  1  8D 33 9F       sta VERA_L0_VSCROLL_H
000F3A  1  8D 38 9F       sta VERA_L1_HSCROLL_H
000F3D  1  8D 3A 9F       sta VERA_L1_VSCROLL_H
000F40  1  A9 01          lda #1
000F42  1  8D 30 9F       sta VERA_L0_HSCROLL_L
000F45  1  8D 32 9F       sta VERA_L0_VSCROLL_L
000F48  1  8D 37 9F       sta VERA_L1_HSCROLL_L
000F4B  1  8D 39 9F       sta VERA_L1_VSCROLL_L
000F4E  1                 ; load initial tile data
000F4E  1  20 C5 0D       jsr INITIALIZE_VRAM_DATA;
000F51  1               
000F51  1                 ; enable layers and start drawing
000F51  1                 ;stz VERA_ctrl
000F51  1  A9 31          lda #LAYER01_ENABLE
000F53  1                 ;lda #LAYER0_ONLY ; for testing
000F53  1                 ;lda #LAYER1_ONLY
000F53  1  8D 29 9F       sta VERA_dc_video
000F56  1               
000F56  1               ;jmp no_interrupt
000F56  1                 ; overwrite RAM IRQ vector with custom handler address
000F56  1  78             sei ; disable IRQ while vector is changing
000F57  1  A9 B8          lda #<custom_irq_handler
000F59  1  8D 14 03       sta IRQVec
000F5C  1  A9 0D          lda #>custom_irq_handler
000F5E  1  8D 15 03       sta IRQVec+1
000F61  1  A9 01          lda #VSYNC_BIT ; make VERA only generate VSYNC IRQs
000F63  1  8D 26 9F       sta VERA_ien
000F66  1  58             cli ; enable IRQ now that vector is properly set
000F67  1               
000F67  1               
000F67  1                 ; draw stuff
000F67  1               
000F67  1                 ; main loop here...
000F67  1               @check_keyboard:
000F67  1                  ; poll keyboard for input
000F67  1  20 E4 FF        jsr GETIN
000F6A  1  C9 00           cmp #0
000F6C  1  F0 F9           beq @check_keyboard
000F6E  1  C9 20           cmp #SPACE
000F70  1  F0 2F           beq cleanup_and_exit
000F72  1  C9 91           cmp #CHAR_UP
000F74  1  F0 0E           BEQ @move_foward
000F76  1  C9 11           cmp #CHAR_DOWN
000F78  1  F0 0F           BEQ @move_backward
000F7A  1  C9 9D           cmp #CHAR_LEFT
000F7C  1  F0 10           BEQ @turn_left
000F7E  1  C9 1D           cmp #CHAR_RIGHT
000F80  1  F0 14           BEQ @turn_right
000F82  1  80 E3           BRA @check_keyboard
000F84  1                 @move_foward:
000F84  1  CE 16 08         dec PLAYER_Y
000F87  1  80 13            bra @update_display
000F89  1                 @move_backward:
000F89  1  EE 16 08         inc PLAYER_Y
000F8C  1  80 0E            bra @update_display
000F8E  1                 @turn_left:
000F8E  1  EE 17 08         inc PLAYER_ANGLE
000F91  1  CE 14 08         dec PLAYER_X
000F94  1  80 06            bra @update_display
000F96  1                 @turn_right:
000F96  1  CE 17 08         dec PLAYER_ANGLE
000F99  1  CE 14 08         dec PLAYER_X
000F9C  1                   ;bra @update_display
000F9C  1                 @update_display:
000F9C  1  20 BE 0F         jsr RENDER_RAYCAST
000F9F  1  80 C6            bra @check_keyboard
000FA1  1               
000FA1  1               cleanup_and_exit:
000FA1  1                  ; TODO - somehow reset to BASIC ?
000FA1  1               
000FA1  1                  ; restore default IRQ vector
000FA1  1  78              sei
000FA2  1  AD 10 08        lda default_irq_vector
000FA5  1  8D 14 03        sta IRQVec
000FA8  1  AD 11 08        lda default_irq_vector+1
000FAB  1  8D 15 03        sta IRQVec+1
000FAE  1  58              cli
000FAF  1  20 81 FF        jsr CINT
000FB2  1  60              rts
000FB3  1               
000FB3  1               no_interrupt:
000FB3  1               @check_keyboard:
000FB3  1                  ; poll keyboard for input
000FB3  1  20 E4 FF        jsr GETIN
000FB6  1  C9 00           cmp #0
000FB8  1  F0 F9           beq @check_keyboard
000FBA  1               end:
000FBA  1  20 81 FF       jsr CINT
000FBD  1  60             rts
000FBE  1               
000FBE  1               RENDER_RAYCAST:
000FBE  1  9C 20 9F       stz VERA_addr_low
000FC1  1  9C 21 9F       stz VERA_addr_high
000FC4  1  A9 10          lda #$10
000FC6  1  8D 22 9F       sta VERA_addr_bank
000FC9  1  AD 16 08       lda PLAYER_Y
000FCC  1  0A             asl a
000FCD  1  0A             asl a
000FCE  1  0A             asl a
000FCF  1  0A             asl a
000FD0  1  18             clc
000FD1  1  6D 14 08       adc PLAYER_X
000FD4  1  A8             tay
000FD5  1  64 22          stz ZP_PTR
000FD7  1  A9 A0          lda #BANKED_RAM_HIGH
000FD9  1  85 23          sta ZP_PTR+1
000FDB  1                 ; do a ghetto raycast up/right
000FDB  1                 @find_wall:
000FDB  1  98               tya
000FDC  1  E5 10            sbc $10 ; up in y
000FDE  1  1A               inc a ; go to right
000FDF  1  A8               tay
000FE0  1  B1 22            lda (ZP_PTR),y
000FE2  1  F0 F7            beq @find_wall
000FE4  1  A2 40          ldx #64
000FE6  1                 @loop:
000FE6  1  8D 23 9F         sta VERA_data0
000FE9  1  CA               dex
000FEA  1  D0 FA            BNE @loop
000FEC  1  60             rts
000FED  1               
000FED  1               
000FED  1               .org $A000
00A000  1               SMALLTESTMAPDATA:
00A000  1                 ;     0    1  2   3   4   5   6   7   8   9   10  11  12  13  14  15
00A000  1  FF FF FF FF    .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
00A004  1  FF FF FF FF  
00A008  1  FF FF FF FF  
00A010  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A014  1  00 00 00 00  
00A018  1  00 00 00 00  
00A020  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A024  1  00 00 00 00  
00A028  1  00 00 00 00  
00A030  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A034  1  00 00 00 00  
00A038  1  00 00 00 00  
00A040  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A044  1  00 00 00 00  
00A048  1  00 00 00 00  
00A050  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $06, $05, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A054  1  00 06 05 00  
00A058  1  00 00 00 00  
00A060  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $05, $06, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A064  1  00 05 06 00  
00A068  1  00 00 00 00  
00A070  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A074  1  00 00 00 00  
00A078  1  00 00 00 00  
00A080  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A084  1  00 00 00 00  
00A088  1  00 00 00 00  
00A090  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A094  1  00 00 00 00  
00A098  1  00 00 00 00  
00A0A0  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A0A4  1  00 00 00 00  
00A0A8  1  00 00 00 00  
00A0B0  1  02 00 00 FF    .byte $02, $00, $00, $FF, $02, $03, $04, $05, $06, $07, $08, $09, $00, $00, $00, $04
00A0B4  1  02 03 04 05  
00A0B8  1  06 07 08 09  
00A0C0  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A0C4  1  00 00 00 00  
00A0C8  1  00 00 00 00  
00A0D0  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A0D4  1  00 00 00 00  
00A0D8  1  00 00 00 00  
00A0E0  1  02 00 00 00    .byte $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
00A0E4  1  00 00 00 00  
00A0E8  1  00 00 00 00  
00A0F0  1  03 03 03 03    .byte $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03
00A0F4  1  03 03 03 03  
00A0F8  1  03 03 03 03  
00A0FF  1               
