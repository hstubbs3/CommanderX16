ca65 V2.19 - Git 8e6c0c1
Main file   : cx3drc001-raycaster_base.asm
Current file: cx3drc001-raycaster_base.asm

000000r 1               .org $080D
00080D  1               .segment "STARTUP"
00080D  1               .segment "INIT"
00080D  1               .segment "ONCE"
00080D  1               .segment "CODE"
00080D  1               
00080D  1  4C 0F 10       jmp start
000810  1               ; RAM Interrupt Vectors
000810  1               IRQVec            = $0314
000810  1               
000810  1               ; VERA
000810  1               VERA_addr_low     = $9F20
000810  1               VERA_addr_high    = $9F21
000810  1               VERA_addr_bank    = $9F22
000810  1               VERA_data0        = $9F23
000810  1               VERA_data1        = $9F24
000810  1               VERA_ctrl         = $9F25
000810  1               VERA_ien          = $9F26
000810  1               VERA_isr          = $9F27
000810  1               VERA_dc_video     = $9F29 ; DCSEL = 0
000810  1               ;   Current Field | Sprites Enable | Layer1 Enable  |Layer0 Enable
000810  1               ; NTSC/RGB: 240P  | NTSC: Chroma Disable / RGB: HV Sync Output Mode
000810  1               
000810  1               VERA_dc_hscale    = $9F2A
000810  1               VERA_dc_vscale    = $9F2B
000810  1               
000810  1               VERA_L0_config    = $9F2D
000810  1               ;   7       6     5   4       3       2             1   0
000810  1               ;   Map Height | Map Width | T256C | Bitmap Mode | Color Depth
000810  1               ;   0 - 32                  0 - 16    0 tiled       0   1bpp mono
000810  1               ;   1 - 64                  1 - 256   1 enabled     1   2bpp 4 color
000810  1               ;   2 - 128                                         2   4bpp 16 color
000810  1               ;   3 - 256                                         3   8bpp 256 color
000810  1               ;   bitmap mode - tilebase points to bitmap data, mapbase not used
000810  1               ;   tile width = 0 is 320 pixels / tile width=1 is 640 pixels.. so could do 4bpp x 320?
000810  1               ;   The palette offset (in 'H-Scroll (11:8)') modifies the color indexes of the bitmap in the same way as in the tile modes.
000810  1               
000810  1               VERA_L0_mapbase   = $9F2E
000810  1               VERA_L0_tilebase  = $9F2F ;   Tile Base Address (16:11) | Tile Height 0-8/1-16 | Tile Width 0-8/1-16
000810  1               VERA_L0_HSCROLL_L = $9F30 ;  H-Scroll (7:0)
000810  1               VERA_L0_HSCROLL_H = $9F31 ;  - H-Scroll (11:8)
000810  1               VERA_L0_VSCROLL_L = $9F32 ;  V-Scroll (7:0)
000810  1               VERA_L0_VSCROLL_H = $9F33 ;  - V-Scroll (11:8)
000810  1               
000810  1               VERA_L1_config    = $9F34
000810  1               VERA_L1_mapbase   = $9F35
000810  1               VERA_L1_tilebase  = $9F36
000810  1               VERA_L1_HSCROLL_L = $9F37 ;  H-Scroll (7:0)
000810  1               VERA_L1_HSCROLL_H = $9F38 ;  - H-Scroll (11:8)
000810  1               VERA_L1_VSCROLL_L = $9F39 ;  V-Scroll (7:0)
000810  1               VERA_L1_VSCROLL_H = $9F3A ;  - V-Scroll (11:8)
000810  1               
000810  1               VSYNC_BIT         = $01
000810  1               
000810  1               ; VRAM Addresses
000810  1               ;   Address range Description
000810  1               ;   $00000 - $1F9BF Video RAM   - 129,424 bytes -> 126K is 129,024 (1F800)
000810  1               ;   $1F9C0 - $1F9FF PSG registers
000810  1               ;   $1FA00 - $1FBFF Palette
000810  1               ;   $1FC00 - $1FFFF Sprite attributes
000810  1               
000810  1               VRAM_RC_layer_tileA = $00000      ; must be 4K aligned - 25x14 x8x8 = 22,400B   21.875K actually starts at  0   - 21.875K - last 128 bytes unused...
000810  1               VRAM_RC_layer_map  = $05800       ; must be 512B aligned  32x32 assigned=2K actually using ~32x20           22K  - 24K    -
000810  1               VRAM_RC_layer_tileB = $06000      ; must be 4K aligned              21.875K                                 24k  - 45.875K
000810  1               RC_ZERO_TILE=$015E
000810  1               VRAM_HUD_layer_map   = $0B800      ; must be 512B aligned  32x32 assigned=2k uses 20 lines -> 1,280 used..   46k  - 47.25  - 768 bytes unused...
000810  1               VRAM_HUD_layer_tile  = $0C000      ; must be 4K aligned . 256*1bpp 8x8 = 2K max                              48K  - 50K
000810  1               
000810  1               VRAM_MAP_SPRITE     = $0C800      ; space for 256 color 64x64 sprite for HUD/map ..                         50K  - 54K
000810  1               
000810  1               ; VRAM_tex_cache_64 = $0C800      ; space for 64x64 textures.. 4x of these just in case..                   50k  - 66K
000810  1               ; VRAM_tex_cache_48 = $10800      ; 48x48 textures - 2.25K each.. space for 8x .. 18K                       66k  - 84k
000810  1               ; VRAM_tex_cache_32 = $15000      ; 32x32 textures - 1k each - space for 16x                                84k  - 100k
000810  1               ; VRAM_tex_cache_24 = $19000      ; 16x16 textures 256k each - 32x=8k                                       100k - 108k
000810  1               VRAM_UNRESERVED   = $1A000      ; 126K+ used for palette/sprites, so 108K-126K=18K available for hud/effects stuffs..
000810  1               ; sprite starts must be 32byte aligned...
000810  1               ; only can go to 126K ...
000810  1               VRAM_palette      = $1FA00      ;
000810  1               VRAM_SPRITE_LIST  = $1FC00
000810  1               BITMAP_PAL_OFFSET = 0
000810  1               ; constants
000810  1               DISPLAY_SCALE_FOUR    = 32
000810  1               DISPLAY_SCALE_TWO     = 64 ; 2X zoom
000810  1               DISPLAY_SCALE_ONE     = 128 ; 640x480
000810  1               MODE_BITMAP_256BPP = $07
000810  1               MODE_BITMAP_16BPP  = $06
000810  1               MODE_TILE_64_WIDE = $10
000810  1               MODE_T256C = $0D
000810  1               MODE_128x64_T16C = $60 ; 128x64, 16-color text
000810  1               MODE_128x64_T256C = $68 ; 128x64, 256-color text
000810  1               MODE_64x32_T256C = $18
000810  1               MODE_32x32_256BPP = $03
000810  1               MODE_32x32_T16C   = $00
000810  1               LAYER0_ONLY       = $11
000810  1               LAYER01_ENABLE    = $31
000810  1               LAYER1_ONLY       = $21
000810  1               LAYER01SPRITES_ENABLE = $71
000810  1               LAYERSPRITES_ONLY = $41
000810  1               VRAM_bitmap       = $04000
000810  1               LOWER_UPPER       = $C400
000810  1               
000810  1               ; ROM Banks
000810  1               ROM_BANK          = $01
000810  1               BASIC_BANK        = 4
000810  1               CHARSET_BANK      = 6
000810  1               RAM_BANK          = $00
000810  1               KERNAL_RAM_BANK   = $00
000810  1               
000810  1               MAP_RAM_BANK      = $01
000810  1               BANKED_RAM_HIGH   = $A0
000810  1               
000810  1               ; Kernal
000810  1               CHROUT            = $FFD2
000810  1               GETIN             = $FFE4
000810  1               CINT              = $FF81
000810  1               
000810  1               ; PETSCII Codes
000810  1               WHITE             = $05
000810  1               RETURN            = $0D
000810  1               SPACE             = $20
000810  1               ZERO_CHAR         = $30
000810  1               SIX_CHAR          = $36
000810  1               NINE_CHAR         = $39
000810  1               C_CHAR            = $43
000810  1               I_CHAR            = $49
000810  1               O_CHAR            = $4F
000810  1               T_CHAR            = $54
000810  1               CLR               = $93
000810  1               CHAR_UP           = $91
000810  1               CHAR_DOWN         = $11
000810  1               CHAR_LEFT         = $9D
000810  1               CHAR_RIGHT        = $1D
000810  1               
000810  1               ; global data
000810  1               
000810  1  00 00        default_irq_vector:  .addr 0
000812  1  01           VSYNC_counter:       .byte 1
000813  1  80           PLAYER_X_SUB: .byte   $80
000814  1  01           PLAYER_X:     .byte   $01 ; (1,14) on the small test map..
000815  1  80           PLAYER_Y_SUB:  .byte   $80
000816  1  0E           PLAYER_Y:     .byte   $0E
000817  1  20           PLAYER_ANGLE:        .byte 32 ; facing NorthEast
000818  1  00           PLAYER_SPEED:        .byte 0
000819  1  00           PLAYER_DX:           .byte 0
00081A  1  00           PLAYER_DY:           .byte 0
00081B  1               
00081B  1               ZP_PTR = $22
00081B  1               
00081B  1               
00081B  1               .macro set_cosine_ptr_from_bearing ; angle should be in a ... a becomes lookup for value, x contains quadrant 0-3
00081B  1                   ; 1 | 0
00081B  1                   ; -----
00081B  1                   ; 2 | 3
00081B  1                   ldx #0 ; 2  2
00081B  1                   asl a ; 2   4
00081B  1                   bcc @no_carry_high ; 2/3   6/7
00081B  1                   inx ; 2   8/7
00081B  1                   inx ; 2   10/7
00081B  1                 @no_carry_high:
00081B  1                   asl a ; 2 12/9
00081B  1                   bcc @no_carry_low ; 14/12
00081B  1                   inx ; 2   16/12
00081B  1                   clc ; 2   18/12
00081B  1                 @no_carry_low:
00081B  1               .endmacro
00081B  1               
00081B  1               .macro set_map_pointer  ; Y in a - clobbers a and y ZP_PTR and ZP_PTR+1 set to map pointer, put x in Y to do lookup proper
00081B  1                   lsr a ; 2
00081B  1                   bcs @quad13_  ; 2/3     4/5
00081B  1                 @quad02_:
00081B  1                     lsr a ; 2   6
00081B  1                     bcs @quad2 ; 2/3   8/9
00081B  1                   @quad0:
00081B  1                       tay
00081B  1                       lda #0
00081B  1                       bra end_set_map_pointer
00081B  1                   @quad2:
00081B  1                       tay
00081B  1                       lda #128
00081B  1                       bra end_set_map_pointer
00081B  1                 @quad13_:
00081B  1                     lsr a ;
00081B  1                     bcs @quad3
00081B  1                   @quad1:
00081B  1                       tay
00081B  1                       lda #64
00081B  1                       bra end_set_map_pointer
00081B  1                   @quad3:
00081B  1                       tay
00081B  1                       lda #192
00081B  1                 end_set_map_pointer:
00081B  1                     sta ZP_PTR
00081B  1                     tya
00081B  1                     ora #$A0
00081B  1                     sta ZP_PTR+1
00081B  1               .endmacro
00081B  1               
00081B  1               HUD_layer_TILEDATA:
00081B  1  00 00 00 00    .byte %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000 ; empty
00081F  1  00 00 00 00  
000823  1               
000823  1  00             .byte %00000000   ; HEX digits for debug
000824  1  1E             .byte %00011110
000825  1  2B             .byte %00101011
000826  1  4B             .byte %01001011
000827  1  53             .byte %01010011
000828  1  52             .byte %01010010
000829  1  7C             .byte %01111100
00082A  1  00             .byte %00000000
00082B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 1
00082F  1  53 52 7C 00  
000833  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 2
000837  1  53 52 7C 00  
00083B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 3
00083F  1  53 52 7C 00  
000843  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 4
000847  1  53 52 7C 00  
00084B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 5
00084F  1  53 52 7C 00  
000853  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 6
000857  1  53 52 7C 00  
00085B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 7
00085F  1  53 52 7C 00  
000863  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 8
000867  1  53 52 7C 00  
00086B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; 9
00086F  1  53 52 7C 00  
000873  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; A
000877  1  53 52 7C 00  
00087B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; B
00087F  1  53 52 7C 00  
000883  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; C
000887  1  53 52 7C 00  
00088B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; D
00088F  1  53 52 7C 00  
000893  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; E
000897  1  53 52 7C 00  
00089B  1  00 1E 2B 4B    .byte %00000000, %00011110, %00101011, %01001011, %01010011, %01010010, %01111100, %00000000 ; F (16)
00089F  1  53 52 7C 00  
0008A3  1               
0008A3  1  FF FF FF FF    .byte %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111 ; filled (17)
0008A7  1  FF FF FF FF  
0008AB  1  AA 55 AA 55    .byte %10101010, %01010101, %10101010, %01010101, %10101010, %01010101, %10101010, %01010101 ; 1x1 checkerboard - 18
0008AF  1  AA 55 AA 55  
0008B3  1                 ; 19 - floor / ceiling gradients
0008B3  1                 ; is like fade between two colors ..
0008B3  1                 ;    100% color0 7/8 ...    6/8(3/4)    5/8
0008B3  1  00 01 44 92    .byte %00000000, %00000001, %01000100, %10010010, %01010101, %10110110, %11011011, %01111111
0008B7  1  55 B6 DB 7F  
0008BB  1               
0008BB  1               HUD_layer_MAPDATA:
0008BB  1                 ; 32x32 but only populating 32x20
0008BB  1                 ;     0         1       2         3       4         5         6       7         8       9       10        11      12          13        14    15
0008BB  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03 ;
0008BF  1  12 03 12 03  
0008C3  1  12 03 12 03  
0008DB  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 0
0008DF  1  12 03 12 03  
0008E3  1  12 03 12 03  
0008FB  1               
0008FB  1  12 03 13 11    .byte $12,$03, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11
0008FF  1  13 11 13 11  
000903  1  13 11 13 11  
00091B  1  13 11 13 11    .byte $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 1
00091F  1  13 11 13 11  
000923  1  13 11 13 11  
00093B  1               
00093B  1  12 03 13 11    .byte $12,$03, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11
00093F  1  13 11 13 11  
000943  1  13 11 13 11  
00095B  1  13 11 13 11    .byte $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $13,$11, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 2
00095F  1  13 11 13 11  
000963  1  13 11 13 11  
00097B  1               
00097B  1  12 03 13 1F    .byte $12,$03, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F
00097F  1  13 1F 13 1F  
000983  1  13 1F 13 1F  
00099B  1  13 1F 13 1F    .byte $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $13,$1F, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 3
00099F  1  13 1F 13 1F  
0009A3  1  13 1F 13 1F  
0009BB  1               
0009BB  1  12 03 13 FC    .byte $12,$03, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC
0009BF  1  13 FC 13 FC  
0009C3  1  13 FC 13 FC  
0009DB  1  13 FC 13 FC    .byte $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $13,$FC, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 4
0009DF  1  13 FC 13 FC  
0009E3  1  13 FC 13 FC  
0009FB  1               
0009FB  1  12 03 13 CB    .byte $12,$03, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB
0009FF  1  13 CB 13 CB  
000A03  1  13 CB 13 CB  
000A1B  1  13 CB 13 CB    .byte $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $13,$CB, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 5
000A1F  1  13 CB 13 CB  
000A23  1  13 CB 13 CB  
000A3B  1               
000A3B  1  12 03 13 BB    .byte $12,$03, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB
000A3F  1  13 BB 13 BB  
000A43  1  13 BB 13 BB  
000A5B  1  13 BB 13 BB    .byte $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 6
000A5F  1  13 BB 13 BB  
000A63  1  13 BB 13 BB  
000A7B  1               
000A7B  1  12 03 13 BB    .byte $12,$03, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB
000A7F  1  13 BB 13 BB  
000A83  1  13 BB 13 BB  
000A9B  1  13 BB 13 BB    .byte $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $13,$BB, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 7
000A9F  1  13 BB 13 BB  
000AA3  1  13 BB 13 BB  
000ABB  1               
000ABB  1  12 03 13 99    .byte $12,$03, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99
000ABF  1  13 99 13 99  
000AC3  1  13 99 13 99  
000ADB  1  13 99 13 99    .byte $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;  line 8
000ADF  1  13 99 13 99  
000AE3  1  13 99 13 99  
000AFB  1               
000AFB  1  12 03 13 99    .byte $12,$03, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99
000AFF  1  13 99 13 99  
000B03  1  13 99 13 99  
000B1B  1  13 99 13 99    .byte $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $13,$99, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;  line 9
000B1F  1  13 99 13 99  
000B23  1  13 99 13 99  
000B3B  1               
000B3B  1  12 03 13 98    .byte $12,$03, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98
000B3F  1  13 98 13 98  
000B43  1  13 98 13 98  
000B5B  1  13 98 13 98    .byte $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $13,$98, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;  line 10
000B5F  1  13 98 13 98  
000B63  1  13 98 13 98  
000B7B  1               
000B7B  1  12 03 13 88    .byte $12,$03, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88
000B7F  1  13 88 13 88  
000B83  1  13 88 13 88  
000B9B  1  13 88 13 88    .byte $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $13,$88, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ;
000B9F  1  13 88 13 88  
000BA3  1  13 88 13 88  
000BBB  1  12 03 13 87    .byte $12,$03, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87 ;
000BBF  1  13 87 13 87  
000BC3  1  13 87 13 87  
000BDB  1  13 87 13 87    .byte $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $13,$87, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 12
000BDF  1  13 87 13 87  
000BE3  1  13 87 13 87  
000BFB  1               
000BFB  1  12 03 13 77    .byte $12,$03, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77
000BFF  1  13 77 13 77  
000C03  1  13 77 13 77  
000C1B  1  13 77 13 77    .byte $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 13
000C1F  1  13 77 13 77  
000C23  1  13 77 13 77  
000C3B  1               
000C3B  1  12 03 13 77    .byte $12,$03, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77
000C3F  1  13 77 13 77  
000C43  1  13 77 13 77  
000C5B  1  13 77 13 77    .byte $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $13,$77, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 14
000C5F  1  13 77 13 77  
000C63  1  13 77 13 77  
000C7B  1               
000C7B  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000C7F  1  00 00 00 00  
000C83  1  00 00 00 00  
000C9B  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 15
000C9F  1  00 00 00 00  
000CA3  1  00 00 00 00  
000CBB  1  12 03 00 00    .byte $12,$03, $00,$00, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01
000CBF  1  01 01 01 01  
000CC3  1  01 01 01 01  
000CDB  1  01 01 01 01    .byte $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 16
000CDF  1  01 01 01 01  
000CE3  1  01 01 01 01  
000CFB  1  12 03 00 00    .byte $12,$03, $00,$00, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01
000CFF  1  01 01 01 01  
000D03  1  01 01 01 01  
000D1B  1  01 01 01 01    .byte $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $01,$01, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 17
000D1F  1  01 01 01 01  
000D23  1  01 01 01 01  
000D3B  1  12 03 00 00    .byte $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00
000D3F  1  00 00 00 00  
000D43  1  00 00 00 00  
000D5B  1  00 00 00 00    .byte $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 18
000D5F  1  00 00 00 00  
000D63  1  00 00 00 00  
000D7B  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03 ;
000D7F  1  12 03 12 03  
000D83  1  12 03 12 03  
000D9B  1  12 03 12 03    .byte $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $12,$03, $00,$00, $00,$00, $00,$00, $00,$00, $00,$00 ; line 19
000D9F  1  12 03 12 03  
000DA3  1  12 03 12 03  
000DBB  1               
000DBB  1               custom_irq_handler:
000DBB  1  AD 27 9F        lda VERA_isr
000DBE  1  29 01           and #VSYNC_BIT
000DC0  1  F0 03           beq @continue ; non-VSYNC IRQ, no tick update
000DC2  1  EE 12 08        inc VSYNC_counter
000DC5  1               @continue:
000DC5  1                  ; continue to default IRQ handler
000DC5  1  6C 10 08        jmp (default_irq_vector)
000DC8  1                  ; RTI will happen after jump
000DC8  1               
000DC8  1               INITIALIZE_VRAM_DATA:
000DC8  1  9C 25 9F       stz VERA_ctrl
000DCB  1                 ;init layer0
000DCB  1  9C 20 9F       stz VERA_addr_low
000DCE  1  A9 58          lda #>VRAM_RC_layer_map
000DD0  1  8D 21 9F       sta VERA_addr_high
000DD3  1  A9 10          lda #($10 | ^VRAM_RC_layer_map) ;
000DD5  1  8D 22 9F       sta VERA_addr_bank
000DD8  1  A9 21          lda #33
000DDA  1  A2 5E          ldx #$5E
000DDC  1  A0 01          ldy #$01
000DDE  1                 @init_layer0_map_line0:
000DDE  1  8E 23 9F         stx VERA_data0
000DE1  1  8C 23 9F         sty VERA_data0
000DE4  1  3A               dec a
000DE5  1  D0 F7            BNE @init_layer0_map_line0
000DE7  1  A9 FF          lda #255
000DE9  1  85 22          sta ZP_PTR
000DEB  1  64 23          stz ZP_PTR+1
000DED  1  A0 0E          ldy #14
000DEF  1  84 24          sty ZP_PTR+2
000DF1  1  18             clc
000DF2  1                 @init_layer0_map_disp_row_loop:
000DF2  1  A0 19            ldy #25
000DF4  1  E6 22            inc ZP_PTR
000DF6  1  A5 22            lda ZP_PTR
000DF8  1  A6 23            ldx ZP_PTR+1
000DFA  1                   @init_layer0_disp_row:
000DFA  1  8D 23 9F           sta VERA_data0
000DFD  1  8E 23 9F           stx VERA_data0
000E00  1  69 0E              adc #14 ; was 28
000E02  1  90 02              bcc @no_carry
000E04  1  E8                 inx
000E05  1  18                 clc
000E06  1                   @no_carry:
000E06  1  88                 dey
000E07  1  D0 F1              BNE @init_layer0_disp_row
000E09  1  A9 07            lda #7
000E0B  1  A2 5E            ldx #$5E
000E0D  1  A0 01            ldy #$01
000E0F  1                   @zero_rest_row:
000E0F  1  8E 23 9F           stx VERA_data0
000E12  1  8C 23 9F           sty VERA_data0
000E15  1  3A                 dec a
000E16  1  D0 F7              BNE @zero_rest_row
000E18  1  C6 24            dec ZP_PTR+2
000E1A  1  D0 D6            BNE @init_layer0_map_disp_row_loop
000E1C  1  A9 A0          lda #160
000E1E  1                 @init_layer1_clear_bottom_rows:
000E1E  1  8E 23 9F         stx VERA_data0
000E21  1  8C 23 9F         sty VERA_data0
000E24  1  3A               dec a
000E25  1  D0 F7            BNE @init_layer1_clear_bottom_rows
000E27  1               
000E27  1                 ; jmp no_tilemap_0A_clear
000E27  1                 ; zero out RC layer
000E27  1  9C 20 9F       stz VERA_addr_low
000E2A  1  9C 21 9F       stz VERA_addr_high
000E2D  1  A9 10          lda #$10
000E2F  1  8D 22 9F       sta VERA_addr_bank
000E32  1  A0 58          ldy #88
000E34  1  A9 00          lda #0
000E36  1  A2 01          ldx #1
000E38  1  18             clc
000E39  1                 @loopA:
000E39  1                   @loopB:
000E39  1                     ; simple loop to zero out..
000E39  1                     ; stz VERA_data0
000E39  1                     ; inc a
000E39  1               
000E39  1                     ; draw a 4x4 grid...
000E39  1  9C 23 9F           stz VERA_data0  ; one tile row
000E3C  1  8E 23 9F           stx VERA_data0
000E3F  1  9C 23 9F           stz VERA_data0
000E42  1  9C 23 9F           stz VERA_data0
000E45  1  9C 23 9F           stz VERA_data0
000E48  1  8E 23 9F           stx VERA_data0
000E4B  1  9C 23 9F           stz VERA_data0
000E4E  1  9C 23 9F           stz VERA_data0
000E51  1               
000E51  1  8E 23 9F           stx VERA_data0  ; 2 tile row
000E54  1  8E 23 9F           stx VERA_data0
000E57  1  8E 23 9F           stx VERA_data0
000E5A  1  8E 23 9F           stx VERA_data0
000E5D  1  8E 23 9F           stx VERA_data0
000E60  1  8E 23 9F           stx VERA_data0
000E63  1  8E 23 9F           stx VERA_data0
000E66  1  8E 23 9F           stx VERA_data0
000E69  1               
000E69  1  9C 23 9F           stz VERA_data0  ; 3 tile row
000E6C  1  8E 23 9F           stx VERA_data0
000E6F  1  9C 23 9F           stz VERA_data0
000E72  1  9C 23 9F           stz VERA_data0
000E75  1  9C 23 9F           stz VERA_data0
000E78  1  8E 23 9F           stx VERA_data0
000E7B  1  9C 23 9F           stz VERA_data0
000E7E  1  9C 23 9F           stz VERA_data0
000E81  1               
000E81  1  9C 23 9F           stz VERA_data0  ; 4 tile row
000E84  1  8E 23 9F           stx VERA_data0
000E87  1  9C 23 9F           stz VERA_data0
000E8A  1  9C 23 9F           stz VERA_data0
000E8D  1  9C 23 9F           stz VERA_data0
000E90  1  8E 23 9F           stx VERA_data0
000E93  1  9C 23 9F           stz VERA_data0
000E96  1  9C 23 9F           stz VERA_data0
000E99  1  69 20              adc #32 ; 32 pixels drawn...
000E9B  1  D0 9C              BNE @loopB
000E9D  1  18               clc
000E9E  1  88               dey
000E9F  1  D0 98            BNE @loopB
000EA1  1  A9 80            lda #$80
000EA3  1  8D 20 9F         sta VERA_addr_low
000EA6  1  A9 57            lda #$57
000EA8  1  8D 21 9F         sta VERA_addr_high
000EAB  1  A9 40            lda #64
000EAD  1                   @clear_tile_15E:
000EAD  1  9C 23 9F           stz VERA_data0
000EB0  1  3A                 dec a
000EB1  1  D0 FA              BNE @clear_tile_15E
000EB3  1  A9 8F            lda #$8F
000EB5  1  9C 23 9F         stz VERA_data0
000EB8  1  9C 23 9F         stz VERA_data0
000EBB  1  8D 23 9F         sta VERA_data0
000EBE  1  9C 23 9F         stz VERA_data0
000EC1  1  9C 23 9F         stz VERA_data0
000EC4  1  9C 23 9F         stz VERA_data0
000EC7  1  9C 23 9F         stz VERA_data0
000ECA  1  9C 23 9F         stz VERA_data0
000ECD  1               
000ECD  1  9C 23 9F         stz VERA_data0
000ED0  1  9C 23 9F         stz VERA_data0
000ED3  1  8D 23 9F         sta VERA_data0
000ED6  1  9C 23 9F         stz VERA_data0
000ED9  1  9C 23 9F         stz VERA_data0
000EDC  1  9C 23 9F         stz VERA_data0
000EDF  1  9C 23 9F         stz VERA_data0
000EE2  1  9C 23 9F         stz VERA_data0
000EE5  1               
000EE5  1  8D 23 9F         sta VERA_data0
000EE8  1  8D 23 9F         sta VERA_data0
000EEB  1  9C 23 9F         stz VERA_data0
000EEE  1  8D 23 9F         sta VERA_data0
000EF1  1  8D 23 9F         sta VERA_data0
000EF4  1  9C 23 9F         stz VERA_data0
000EF7  1  9C 23 9F         stz VERA_data0
000EFA  1  9C 23 9F         stz VERA_data0
000EFD  1               
000EFD  1  9C 23 9F         stz VERA_data0
000F00  1  9C 23 9F         stz VERA_data0
000F03  1  8D 23 9F         sta VERA_data0
000F06  1  9C 23 9F         stz VERA_data0
000F09  1  9C 23 9F         stz VERA_data0
000F0C  1  9C 23 9F         stz VERA_data0
000F0F  1  9C 23 9F         stz VERA_data0
000F12  1  9C 23 9F         stz VERA_data0
000F15  1               
000F15  1  9C 23 9F         stz VERA_data0
000F18  1  9C 23 9F         stz VERA_data0
000F1B  1  8D 23 9F         sta VERA_data0
000F1E  1  9C 23 9F         stz VERA_data0
000F21  1  9C 23 9F         stz VERA_data0
000F24  1  9C 23 9F         stz VERA_data0
000F27  1  9C 23 9F         stz VERA_data0
000F2A  1  9C 23 9F         stz VERA_data0
000F2D  1               
000F2D  1  9C 23 9F         stz VERA_data0
000F30  1  9C 23 9F         stz VERA_data0
000F33  1  9C 23 9F         stz VERA_data0
000F36  1  9C 23 9F         stz VERA_data0
000F39  1  9C 23 9F         stz VERA_data0
000F3C  1  9C 23 9F         stz VERA_data0
000F3F  1  9C 23 9F         stz VERA_data0
000F42  1  9C 23 9F         stz VERA_data0
000F45  1               
000F45  1  9C 23 9F         stz VERA_data0
000F48  1  9C 23 9F         stz VERA_data0
000F4B  1  9C 23 9F         stz VERA_data0
000F4E  1  9C 23 9F         stz VERA_data0
000F51  1  9C 23 9F         stz VERA_data0
000F54  1  9C 23 9F         stz VERA_data0
000F57  1  9C 23 9F         stz VERA_data0
000F5A  1  9C 23 9F         stz VERA_data0
000F5D  1               
000F5D  1  9C 23 9F         stz VERA_data0
000F60  1  9C 23 9F         stz VERA_data0
000F63  1  9C 23 9F         stz VERA_data0
000F66  1  9C 23 9F         stz VERA_data0
000F69  1  9C 23 9F         stz VERA_data0
000F6C  1  9C 23 9F         stz VERA_data0
000F6F  1  9C 23 9F         stz VERA_data0
000F72  1  9C 23 9F         stz VERA_data0
000F75  1               
000F75  1               
000F75  1               no_tilemap_0A_clear:
000F75  1               
000F75  1  9C 20 9F       stz VERA_addr_low
000F78  1  A9 C0          lda #>VRAM_HUD_layer_tile ;
000F7A  1  8D 21 9F       sta VERA_addr_high
000F7D  1  A9 10          lda #($10 | ^VRAM_HUD_layer_tile) ;
000F7F  1  8D 22 9F       sta VERA_addr_bank
000F82  1  A9 1B          lda #<HUD_layer_TILEDATA
000F84  1  85 22          sta ZP_PTR
000F86  1  A9 08          lda #>HUD_layer_TILEDATA
000F88  1  85 23          STA ZP_PTR+1
000F8A  1  A2 08          ldx #8
000F8C  1  A0 00          ldy #0
000F8E  1                 @init_layer1_tiledata:
000F8E  1                   @init_layer1_tiledata_inner:
000F8E  1  B1 22              lda (ZP_PTR),y
000F90  1  8D 23 9F           sta VERA_data0
000F93  1  C8                 iny
000F94  1  D0 F8              BNE @init_layer1_tiledata_inner
000F96  1  E6 23            inc ZP_PTR+1
000F98  1  CA               dex
000F99  1  D0 F3            BNE @init_layer1_tiledata
000F9B  1  9C 20 9F       stz VERA_addr_low
000F9E  1  A9 B8          lda #>VRAM_HUD_layer_map
000FA0  1  8D 21 9F       sta VERA_addr_high
000FA3  1  A9 10          lda #($10 | ^VRAM_HUD_layer_map) ;
000FA5  1  8D 22 9F       sta VERA_addr_bank
000FA8  1  A9 BB          lda #<HUD_layer_MAPDATA
000FAA  1  85 22          sta ZP_PTR
000FAC  1  A9 08          lda #>HUD_layer_MAPDATA
000FAE  1  85 23          sta ZP_PTR+1
000FB0  1  A2 05          ldx #5
000FB2  1                 @init_layer1_mapdata:
000FB2  1                   @init_layer1_mapdata_inner:
000FB2  1  B1 22              lda (ZP_PTR),y
000FB4  1  8D 23 9F           sta VERA_data0
000FB7  1  C8                 iny
000FB8  1  D0 F8              BNE @init_layer1_mapdata_inner
000FBA  1  E6 23            inc ZP_PTR+1
000FBC  1  CA               dex
000FBD  1  D0 F3            BNE @init_layer1_mapdata
000FBF  1               
000FBF  1  9C 20 9F       stz VERA_addr_low
000FC2  1  A9 FC          lda #>VRAM_SPRITE_LIST
000FC4  1  8D 21 9F       sta VERA_addr_high
000FC7  1  A9 11          lda #($10 | ^VRAM_SPRITE_LIST) ;
000FC9  1  8D 22 9F       sta VERA_addr_bank
000FCC  1                 ; 0010 10111110 00000
000FCC  1  A9 BE          lda #$BE  ; sprite 0 - player cursor.. use tile 15F from layer1
000FCE  1  8D 23 9F       sta VERA_data0 ;  address low
000FD1  1  A9 82          lda #$82
000FD3  1  8D 23 9F       sta VERA_data0  ; address high
000FD6  1  A9 03          lda #3
000FD8  1               
000FD8  1  9C 23 9F       stz VERA_data0 ;  low X zero
000FDB  1  9C 23 9F       stz VERA_data0 ; high x zero
000FDE  1               
000FDE  1  9C 23 9F       stz VERA_data0 ; low y zero
000FE1  1  9C 23 9F       stz VERA_data0 ; high y zero
000FE4  1               
000FE4  1  A9 0C          lda #$0C ; infront of everything
000FE6  1  8D 23 9F       sta VERA_data0
000FE9  1  9C 23 9F       stz VERA_data0 ; 8x8 palette offset 0
000FEC  1               
000FEC  1                 ; setup HUD map sprite
000FEC  1                 ; 0110 01000000 00000
000FEC  1  A9 40          lda #64 ; #((VRAM_MAP_SPRITE>>5) & $FF)
000FEE  1  8D 23 9F       sta VERA_data0
000FF1  1  A9 86          lda #$86 ;#($80 | (VRAM_MAP_SPRITE>>13))
000FF3  1  8D 23 9F       sta VERA_data0
000FF6  1               
000FF6  1  A9 02          lda #2
000FF8  1  8D 23 9F       sta VERA_data0 ;  low X zero
000FFB  1  9C 23 9F       stz VERA_data0 ; high x zero
000FFE  1               
000FFE  1  8D 23 9F       sta VERA_data0 ; low y zero
001001  1  9C 23 9F       stz VERA_data0 ; high y zero
001004  1  A9 0C          lda #$0C
001006  1  8D 23 9F       sta VERA_data0
001009  1  A9 F0          lda #$F0
00100B  1  8D 23 9F       sta VERA_data0
00100E  1  60             rts
00100F  1               
00100F  1               start:
00100F  1                 ; start of program - init globals
00100F  1  AD 14 03       lda IRQVec
001012  1  8D 10 08       sta default_irq_vector
001015  1  AD 15 03       lda IRQVec+1
001018  1  8D 11 08       sta default_irq_vector+1
00101B  1               
00101B  1  9C 29 9F       stz VERA_dc_video   ; disable display
00101E  1  A9 2B          lda #43 ; set scale for bitmap mode
001020  1  8D 2A 9F       sta VERA_dc_hscale
001023  1  A9 2A          lda #42
001025  1  8D 2B 9F       sta VERA_dc_vscale
001028  1                 ; layer 0 config...
001028  1  A9 03          lda #MODE_32x32_256BPP
00102A  1  8D 34 9F       sta VERA_L1_config
00102D  1  A9 2C          lda #(VRAM_RC_layer_map >> 9)
00102F  1  8D 35 9F       sta VERA_L1_mapbase
001032  1                 ; lda #(VRAM_layer0_tileA >> 9) ;
001032  1                 ; sta VERA_L0_tilebase
001032  1  9C 36 9F       stz VERA_L1_tilebase
001035  1  64 00          stz BITMAP_PAL_OFFSET ; palette offset 0
001037  1                 ;layer 1 config
001037  1  A9 00          lda #MODE_32x32_T16C
001039  1  8D 2D 9F       sta VERA_L0_config
00103C  1  A9 5C          lda #(VRAM_HUD_layer_map >> 9)
00103E  1  8D 2E 9F       sta VERA_L0_mapbase
001041  1  A9 60          lda #(VRAM_HUD_layer_tile>>9)
001043  1  8D 2F 9F       sta VERA_L0_tilebase
001046  1               
001046  1  A9 01          lda #1
001048  1  8D 31 9F       sta VERA_L0_HSCROLL_H
00104B  1  8D 33 9F       sta VERA_L0_VSCROLL_H
00104E  1  8D 38 9F       sta VERA_L1_HSCROLL_H
001051  1  8D 3A 9F       sta VERA_L1_VSCROLL_H
001054  1  A9 01          lda #1
001056  1  8D 30 9F       sta VERA_L0_HSCROLL_L
001059  1  8D 32 9F       sta VERA_L0_VSCROLL_L
00105C  1  8D 37 9F       sta VERA_L1_HSCROLL_L
00105F  1  8D 39 9F       sta VERA_L1_VSCROLL_L
001062  1                 ; load initial tile data
001062  1  20 C8 0D       jsr INITIALIZE_VRAM_DATA;
001065  1               
001065  1                 ; enable layers and start drawing
001065  1                 ;stz VERA_ctrl
001065  1                 ;lda #LAYER01_ENABLE
001065  1                 ;lda #LAYER0_ONLY ; for testing
001065  1                 ;lda #LAYER1_ONLY
001065  1                 ;lda #LAYERSPRITES_ONLY
001065  1  A9 71          lda #LAYER01SPRITES_ENABLE
001067  1  8D 29 9F       sta VERA_dc_video
00106A  1               
00106A  1               ;jmp no_interrupt
00106A  1                 ; overwrite RAM IRQ vector with custom handler address
00106A  1  78             sei ; disable IRQ while vector is changing
00106B  1  A9 BB          lda #<custom_irq_handler
00106D  1  8D 14 03       sta IRQVec
001070  1  A9 0D          lda #>custom_irq_handler
001072  1  8D 15 03       sta IRQVec+1
001075  1  A9 01          lda #VSYNC_BIT ; make VERA only generate VSYNC IRQs
001077  1  8D 26 9F       sta VERA_ien
00107A  1  58             cli ; enable IRQ now that vector is properly set
00107B  1               
00107B  1               
00107B  1  20 DE 11       jsr start_level
00107E  1               
00107E  1               
00107E  1                 ; main loop here...
00107E  1               update_display:
00107E  1  20 97 11         jsr RENDER_RAYCAST
001081  1  20 98 11         jsr UPDATE_HUD_MAP
001084  1               
001084  1               @check_keyboard:
001084  1                  ; poll keyboard for input
001084  1  20 E4 FF        jsr GETIN
001087  1  C9 00           cmp #0
001089  1  F0 F9           beq @check_keyboard
00108B  1  C9 20           cmp #SPACE
00108D  1  F0 1C           beq @do_start_level
00108F  1  C9 0D           cmp #RETURN
001091  1  D0 03           bne @check_up
001093  1  4C 7A 11        jmp cleanup_and_exit
001096  1                 @check_up:
001096  1  C9 91           cmp #CHAR_UP
001098  1  F0 20           BEQ move_foward
00109A  1  C9 11           cmp #CHAR_DOWN
00109C  1  D0 03           BNE @check_left
00109E  1  4C 74 11        jmp move_backward
0010A1  1                 @check_left:
0010A1  1  C9 9D           cmp #CHAR_LEFT
0010A3  1  F0 0B           BEQ @turn_left
0010A5  1  C9 1D           cmp #CHAR_RIGHT
0010A7  1  F0 0C           BEQ @turn_right
0010A9  1                  ;lda PLAYER_SPEED
0010A9  1                  ;BEQ @check_keyboard
0010A9  1                  ;BPL @moving forward
0010A9  1                  ;inc a
0010A9  1  80 D9           BRA @check_keyboard
0010AB  1                 @do_start_level:
0010AB  1  20 DE 11         jsr start_level
0010AE  1  80 CE            bra update_display
0010B0  1                 @turn_left:
0010B0  1  CE 14 08         dec PLAYER_X
0010B3  1                   ;inc PLAYER_ANGLE
0010B3  1  80 C9            bra update_display
0010B5  1                 @turn_right:
0010B5  1  EE 14 08         inc PLAYER_X
0010B8  1                   ; dec PLAYER_ANGLE
0010B8  1  80 C4            bra update_display
0010BA  1                 move_foward:
0010BA  1  CE 16 08           dec PLAYER_Y
0010BD  1  4C 7E 10           jmp update_display
0010C0  1  AD 16 08           lda PLAYER_Y
0010C3  1  4A B0 0D 4A        set_map_pointer  ; Y in a - clobbers a and y ZP_PTR and ZP_PTR+1 set to map pointer, put x in Y to do lookup proper
0010C7  1  B0 05 A8 A9  
0010CB  1  00 80 10 A8  
0010E5  1  AE 18 08           ldx PLAYER_SPEED
0010E8  1  10 02              BPL @forward_positive_speed
0010EA  1  A2 00              ldx #0
0010EC  1                   @forward_positive_speed:
0010EC  1  E0 08              cpx #8 ; max speed forward
0010EE  1  F0 04              beq @forward_max_speed
0010F0  1  E8                 inx
0010F1  1  8E 18 08           stx PLAYER_SPEED
0010F4  1                   @forward_max_speed:
0010F4  1  AD 17 08           lda PLAYER_ANGLE
0010F7  1  A2 00 0A 90        set_cosine_ptr_from_bearing
0010FB  1  02 E8 E8 0A  
0010FF  1  90 02 E8 18  
001103  1  A8                 tay ; transfer the converted angle to y ..
001104  1  CA                 dex
001105  1  30 6A              BMI @quad0_forward
001107  1  F0 65              BEQ @quad1_forward
001109  1  CA                 dex
00110A  1  F0 5F              BEQ @quad2_forward
00110C  1                   @quad3_forward:
00110C  1                       ; x+, y+
00110C  1  B9 00 70             lda COSINES,y
00110F  1  4A                   lsr ; move 1/2 block per step
001110  1  4A                   lsr ; move 1/4 block per step
001111  1  4A                   lsr ; move 1/8 block per step
001112  1  8D 19 08             sta PLAYER_DX
001115  1  B9 00 70             lda SINES,y
001118  1  4A                   lsr ; move 1/2 block per step
001119  1  4A                   lsr ; move 1/4 block per step
00111A  1  4A                   lsr ; move 1/8 block per step
00111B  1  8D 1A 08             sta PLAYER_DY
00111E  1  18                   clc
00111F  1  AD 13 08             lda PLAYER_X_SUB
001122  1  85 24                sta ZP_PTR+2
001124  1  AC 14 08             ldy PLAYER_X
001127  1                       ; sty ZP_PTR+3
001127  1  AD 15 08             lda PLAYER_Y_SUB
00112A  1  85 26                sta ZP_PTR+4
00112C  1  AD 16 08             lda PLAYER_Y
00112F  1  85 27                sta ZP_PTR+5
001131  1  AE 18 08             ldx PLAYER_SPEED
001134  1                     @quad3_forward_step_loop:
001134  1  A5 24                  lda ZP_PTR+2
001136  1  6D 19 08               adc PLAYER_DX
001139  1  85 24                  sta ZP_PTR+2
00113B  1  90 02                  bcc @quad3_forward_done_x_step
00113D  1  C8                     iny
00113E  1  18                     clc
00113F  1                       @quad3_forward_done_x_step:
00113F  1  A5 26                  lda ZP_PTR+4
001141  1  6D 1A 08               adc PLAYER_DY
001144  1  85 26                  sta ZP_PTR+4
001146  1  90 0E                  bcc @quad3_forward_done_y_step
001148  1  A5 22                  lda ZP_PTR
00114A  1  69 3F                  adc #63 ; 64 with the carry!
00114C  1  85 22                  sta ZP_PTR
00114E  1  A5 23                  lda ZP_PTR+1
001150  1  69 00                  adc #0
001152  1  85 23                  sta ZP_PTR+1  ; increment high byte as needed
001154  1  E6 27                  inc ZP_PTR+5
001156  1                       @quad3_forward_done_y_step:
001156  1  B1 22                  lda (ZP_PTR),y ;  grab value from map
001158  1  F0 03                  beq @q3f_stash_step
00115A  1  4C 7E 10               jmp update_display
00115D  1                       @q3f_stash_step:
00115D  1  8C 14 08               sty PLAYER_X
001160  1  A5 27                  lda ZP_PTR+5
001162  1  8D 16 08               sta PLAYER_Y
001165  1  CA                     dex
001166  1  D0 CC                  BNE @quad3_forward_step_loop
001168  1  4C 7E 10               jmp update_display
00116B  1                   @quad2_forward:
00116B  1  4C 7E 10           jmp update_display
00116E  1                   @quad1_forward:
00116E  1  4C 7E 10           jmp update_display
001171  1                   @quad0_forward:
001171  1  4C 7E 10           jmp update_display
001174  1               
001174  1                 move_backward:
001174  1  EE 16 08          inc PLAYER_Y
001177  1  4C 7E 10         jmp update_display
00117A  1               
00117A  1               
00117A  1               cleanup_and_exit:
00117A  1                  ; TODO - somehow reset to BASIC ?
00117A  1               
00117A  1                  ; restore default IRQ vector
00117A  1  78              sei
00117B  1  AD 10 08        lda default_irq_vector
00117E  1  8D 14 03        sta IRQVec
001181  1  AD 11 08        lda default_irq_vector+1
001184  1  8D 15 03        sta IRQVec+1
001187  1  58              cli
001188  1  20 81 FF        jsr CINT
00118B  1  60              rts
00118C  1               
00118C  1               no_interrupt:
00118C  1               @check_keyboard:
00118C  1                  ; poll keyboard for input
00118C  1  20 E4 FF        jsr GETIN
00118F  1  C9 00           cmp #0
001191  1  F0 F9           beq @check_keyboard
001193  1               end:
001193  1  20 81 FF       jsr CINT
001196  1  60             rts
001197  1               
001197  1               RENDER_RAYCAST:
001197  1  60             rts
001198  1               
001198  1               UPDATE_HUD_MAP:
001198  1  9C 25 9F         stz VERA_ctrl
00119B  1  A9 10            lda #($10 | ^VRAM_MAP_SPRITE) ;
00119D  1  8D 22 9F         sta VERA_addr_bank
0011A0  1  A9 C8            lda #>VRAM_MAP_SPRITE
0011A2  1  8D 21 9F         sta VERA_addr_high
0011A5  1  9C 20 9F         stz VERA_addr_low
0011A8  1  A2 10            ldx #16
0011AA  1  64 22            stz ZP_PTR
0011AC  1  A9 80            lda #>MAPDDATA
0011AE  1  85 23            sta ZP_PTR+1
0011B0  1  A0 00            ldy #0
0011B2  1                 @draw_map:
0011B2  1                   @draw_map_256_bytes:
0011B2  1  B1 22                lda (ZP_PTR),y
0011B4  1  8D 23 9F             sta VERA_data0
0011B7  1  C8                   iny
0011B8  1  D0 F8                BNE @draw_map_256_bytes
0011BA  1  E6 23              inc ZP_PTR+1
0011BC  1  CA                 dex
0011BD  1  D0 F3              BNE @draw_map
0011BF  1  9C 20 9F       stz VERA_addr_low
0011C2  1  A9 02          lda #2
0011C4  1  8D 20 9F       sta VERA_addr_low
0011C7  1  A9 FC          lda #>VRAM_SPRITE_LIST
0011C9  1  8D 21 9F       sta VERA_addr_high
0011CC  1  A9 21          lda #($20 | ^VRAM_SPRITE_LIST) ;
0011CE  1  8D 22 9F       sta VERA_addr_bank
0011D1  1  AD 14 08       lda PLAYER_X
0011D4  1  8D 23 9F       sta VERA_data0
0011D7  1  AD 16 08       lda PLAYER_Y
0011DA  1  8D 23 9F       sta VERA_data0
0011DD  1  60               rts
0011DE  1               
0011DE  1               MAP_PLAYER_START_X=$9000
0011DE  1               MAP_PLAYER_START_Y=$9001
0011DE  1               MAP_PLAYER_START_ANGLE=$9002
0011DE  1               
0011DE  1               start_level:
0011DE  1  A2 80          ldx #$80
0011E0  1  AD 00 90       lda MAP_PLAYER_START_X
0011E3  1  8D 14 08       sta PLAYER_X
0011E6  1  8E 13 08       stx PLAYER_X_SUB
0011E9  1  AD 01 90       lda MAP_PLAYER_START_Y
0011EC  1  8D 16 08       sta PLAYER_Y
0011EF  1  8E 15 08       stx PLAYER_Y_SUB
0011F2  1  AD 02 90       lda MAP_PLAYER_START_ANGLE
0011F5  1  8D 17 08       sta PLAYER_ANGLE
0011F8  1  60             rts
0011F9  1               
0011F9  1               
0011F9  1  xx xx xx xx  .res $7000-*
0011FD  1  xx xx xx xx  
001201  1  xx xx xx xx  
007000  1               COSINES:
007000  1               .include "cosines-quadrant0-8bit.inc"
007000  2               
007000  1               SINES:
007000  1               .include "sines-quadrant0-8bit.inc"
007000  2               
007000  1               
007000  1  xx xx xx xx  .res $8000-*
007004  1  xx xx xx xx  
007008  1  xx xx xx xx  
008000  1               MAPDDATA:
008000  1  FF FF FF FF  .incbin "raycast_testmap_001.rcm"
008004  1  FF FF FF FF  
008008  1  FF FF FF FF  
009004  1               
009004  1               
009004  1               
