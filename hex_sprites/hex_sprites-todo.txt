todo.txt

2024/02/18

1220 	initial git getting together.. 
1400 	OK first sprite is popping up OK ... 

2024/02/19

0915 	world size.. 
		wanted something like ~30x58 or maybe ~39x58 even ( alcove or oval style with 1" lip)

		hexes are sqrt(3):2 .. conforming to a grid system would make it sqrt(3):6/4, losing 1/8 to 
		row above and below..  sqrt(3)=1.732 .. ~71/41 ..  

		solving ratio to get a 'circular' unit - 71/41 : 3/2  - circular unit 265/164 ...
		unit 		width 		height(hex) 	height(offset grid)
		155/82 	: 71/41 	: 	2 			: 	3/2
		1.8902 	: 1.7317 	: 	2 			: 	1.5
		1 		: 0.9161 	: 	1.0580 		: 	0.7935
		16px 	: 14.6576 	: 	16.928 		: 	12.6960
		16|0 	: 14|168 	: 	16|237 		: 	12|178

		tub units 		hexes
		Y 		X  		Y 		X
		30 		58 		37.8 	63.1 	37x63 should be fine...

		37*12.696 = 469.752
		63*14.6576 = 923.4288
		925x471 PNG where 1 unit is 16px = 57.8125 x 29.4375


1415 	calling it for now, need to sort out some data structures.. have made the Godot thing work well for figuring
  		out what is needed for each bearing though..


2024/02/21
0755 	normalize so widest orientation of hex is 16 px ? 
		unit 155/82 : 71/41  : 2 : 3/2 ... 
			 15.121 : 13.853 : 16 : 12 
			 15  31 : 13 218 : 16 : 12   0
		test 925x471 .. = 60.418 x 30.76 ?

0845 	approximating 71/41 as 7/4 has ~1% error .. makes hex exactly 16x14 and then circular unit is 15...


2024/02/22

0800 	building out table for doing view. 
		on-screen, each hexagon ( point-up ) is represented by circle with diameter 16 that is squashed for camera tilt

		world map itself should be 29x50 actually, because the ratios .. if we set the height (offset grid) to 1" ... 
		width 		height(hex) 	height(offset grid)
		71/41 	: 	2 			: 	3/2
		71/41*2/3 : 2*2/3 		: 	3/2 * 2/3
		142/123 : 	4/3 		: 	1

		now, world 29 units tall requires just 29 rows.. to get 58 units wide - 58 divided by 142/123 = 50.239
		makes number of cells to calculate = 2*(36 to 49) + 50 = 1190+50= 1240 only... so ~50K cycles to calculate step

2030 	getting lookup table sorted out for next test 

2024/02/24

0800 	single row working... committing

1050 	view generating going forward.. OK 

1300 	somehow got the view generation test working.. 


2024/02/26

0630 	yesterday doofed up map of the tub .. want to make demo moving around the world.. 

2024/02/28
0950 	been thinking would like to make the view maybe closer to 45* or expanding to larger view, maybe 215x161 or even
		256x192 .. going wider may mean larger cell width though ( >16 px).. possibly leaving gaps ...


2024/02/29		
0715 	switched test to 215x161 .. if go to 256x192 with like 8 px border.. would be like 256
0910 	ok is working fine, added border to test and updated how test VRAM data is written .. committing.. 

2024/03/01
0805 	gonna doof up some sprites to use for showing numbers.. 

2024/03/02
0800 	want to update the test graphics to use more 45* view ... and better water patch..

		x=16, unit=14, makes unit/Y/Z = 14/10/10 for 45*, 14/11/9, 14/12/8 .. ! well then.. 14/12/8 sounds OK ... hmm..

1015 	is setup so X unit wide = 16 with 45* but seems there's gaps sometimes left/right..

		maybe go to X=15? if X=15 then unit on-screen becomes 15 *2/sqrt(3) *3/4 = 15*sqrt(3)/2 = 12.99038 ... 
		then 45* view angle

1035 	OK add sprites to show bearing.. .

1045 	ok can see bearing... thinking really should be like X=15.5 .. maybe its not off by so much.. 
		15.5 - technically centered in the 16 wide px.. 
		that makes unit ~13.42339 and Y/Z = 9.5 

1135 	still breaks.. so 15? or hmmm.. 15.25 15.5 is ok-ish.. trying 15.25

1205 	oops.. needed to CLC before adds because some of these are adding negs. . meh.. so diameter=16 should be OK .. 
		OK then switching back to diameter = 16, 45* would make y/z = 9.7979589707430835822048674485242 ..
		ok generate numbers and move on with life.. 
1235 	slapped CLC all over the place but 
1240 	seems issue with adding next row.. 
		-0.5 	255 128
		+1.5 	  1 128
		128+128 = 0 C => C+255+1= 1 	ok.. so works like reg 16 bit addition.. why getting 1 off? weird.. mark as bug..

1300 	OK.. chcking sprite - max distance is 11.3 .. so need 12 px. is ok .. to get Xx11 could use X = 15.5563

TODO 	Switch view to using a more 45* view? currently is 14/8 .. maybe 12/11 ? 13/9? ... 13/10 - x 16.4 .. 12/9 x=15..
		15/12/9 implies 36.8698* or 26.2185 ( 26 56 BAM) 
	DONE 	set to 45* - X/Y/Z = 13.856/9.798/9.798 OK 
1305 	commit .. 

		Now setup location for CELL X,Y and WORLD X,Y? using the digital counter sprites..
BUG 	spaces along X when rotating.. max distance is 11.3 .. so need 12 px. is ok .. to get Xx11 could use X = 15.5563
		am testing if off screen before I add to do next row -.- line 402.. 
	FIXED ! woot .. 
1340 	commit fix 

TODO 	figure out proper calculation of camera_z ... 
		rotate world X,Z by bearing ( Y is up..)  camera Z=255 is back of screen..
		There's about 15 full world units along Z on the screen.. so after rotation, Camera Z = Z*16 .. simple. 
		world Y get's subtracted ... higher=closer ...
		So ... CameraZ = int((RotatedZ - WorldY)*16)
		screenX = 215 pixels, screen X = 13.85640646 pixels.. ~16 units across screen, +/8 basically.. 

		screenX = (RotatedX*13.856) + screenHalf - <+/-8 .. could make lookup then ? s3.4 - within 1/16 X? more/less per px..

		ScreenY = 161 px.. unitY is 9.798 pixels ~16 units across screen.. only considering worldY .. negative Y isn't drawn..
		ScreenY = screenHeight - (worldY*9.798) - RotatedZ*9.798 - ScreenZeroZ
		ScreenY = screenHeight - ScreenZeroZ - (worldY + RotatedZ)*9.798 	
		so do lookup - ScreenY= lookup(WorldY + RotatedZ + ScreenZeroZ) - 4.4 .. easy peazy .. 

1435 	OK calling it a day need food anyway.. roughed in google sheets with lookup for the camera Z and stuff. 

2024/03/03
0755 	ok lets see.. 
TODO 	add some 8x8 sprites to show numbers for troubleshooting - cell, bearing
	DONE 	was completed the other day.. lol reserved ~21 sprites for troubleshooting stuffs

1225 	sorted out moving camera ... at least the numbers..

1340 	moving around by cell value sets world X,Y correctly woot. 
		world X = ((31-cellY)/2 + CellX) * ratio  
		committing..

1930 	back at it .. 
2030 	code working .. conversion from world pos -> cell pos OK 
TODO 	FIX code to recalculate cell position from world position. 
	DONE 
TODO 	fix code for calculating cell pos -> world pps
	DONE
2045 	cell -> world pos comes up ~2/256 short vs world -> cell calc. for X ... will consider as within tolerance
		committing...

2024/03/04
0205 	can't sleep.. thinking about implementing viewing the level as we drive around.. 
		plan should be kept simple - will make a variant of the existing level tile and use that for the sprite addr if 
		world lookup gives non-zero.. 
		probably just white tbh .. 
		so color 1 .. 

0315 	yeah that was all sorts of fooked.. going to bed. .

0820 	OK.. new plan.. use a 8bit 64x64 sprite to overlay a view of what the $@#$# damn code is doing.. 
0946 	running late for work.. gotta jet

2024/03/05
0010 	OK fix arrow keys up/down movement and then start in on object list.. 
TODO  	FIX arrow keys up/down to restrict movement to stay within valid world addresses .. if not tub itself.. 
	DONE
1300 	Only two quadrants work but at least is all verified.. otay
TODO 	making moving around by hex work 
	DONE
1305 	commit

2230 	Back at it.. start work fleshing out what's going to _read_ the object list .. 
		each tile top occupies ~16x10 = 160 pixels.. so up to ~215 objects needed for terrain.. 
2024/03/06
0020 	Appears push_world_to_object list is borked and the draw world is mucked as well. 

2024/03/07
0030 	taking a look at stuff .. .
0045 	draw world had a thing going on because tub world wasn't a whole number of 256B pages.. 
0050 	appears push_world_to_object_list is endless loop ?
		all the z next pointers became $46 ...?

0230 	quadA working.. well, at the least isn't showing anything outside the world.. some issues when row goes offscreen.. OK 
		commit..

2300 	OK... maybe not quads... but zig zag starting to left and then to right.. 

2024/03/08
0120 	Ummm... ok... I got it go left then right but left again not working... hmm.. stuck a ; so it returns after the switch..

0145	next row for switching left needs 2 undos not 1 
0205 	OK that's a little better now but not really? seems has trouble getting back to visible locations.. 

2024/03/09
TODO 	sort out that z-buffer object list
	DONE 	that's pretty much working
0730 	started working on stuff
1335 	am fucking stuck.. something is just mangled the stack.. 
1340 	oops.. the code to add waves overflowed into the stack
1450 	ZigZagA is working ... Wow
		Commit..
1510 	was playing around a bit more .. isn't doing all the ZigZagA but literally is edge cases now 
	need food...

2024/03/10
0710 	Back at it.. want to sort out the zig zag logic. 
1015 	ZigZag A working
	Commit
TODO 	ZigZag terrain renderer to object list
1115 DONE! 
1310 	sub-cell sort of working but its messed so... ? 
	commit
1330
1900 	OK just call it alrady
	commit

2024/03/13
0755 	getting subcell stuff worked out better ... 
		first off - worldX to CellX - should be scaled(WorldX) - floor(Y)/2 .. not scaled(WorldX) - Y/2
		flipping the map representation so that its + floor(Y)/2 not minus.. this will affect zig zags !
0900 	need to get out of here.. fixed up move by cell.. move arbitrary is borked though.. 
	committing
2120 	OK try to get moving working..
TODO 	fix up arbitrary movement / worldpos 
TODO 	fix up zig zagB since switched map/memory alignment
	DONE! 
2340 	Woot! moving is smooth now .. rotating and subcell is weird though

2024/03/14
0010 	OK stopping here.. 
	commit

2024/03/15
1930 	back at it.. first, want to add keys so I can +/- cell X/Y directly in ~1/16 increments..
1945 	OK IJKL working OK .. now fix the subcell calc.. 
TODO 	fix up sub-cell alignment
	DONE 	subcell alignment / rotation working
2020 	re-enable heights... seems to work.. OK 
	commit

2230 	changing sprite for heading... 
		first.. disable heights .. 
		next.. need sprites.. treat sprites as having center at 8,5.. 
		also, only using 16x16 sprites for now.. 

2024/03/16
0700 	further sprite stuffs
TODO 	implement changing sprite to account for heading, setting h-flip?
	DONE
1245 	OK ... initial version of the engine all set... next will get to blitting the other objects.
		debug sprites got corrupted but such is life?
	Commit

2024/03/17
1105 	OK getting back into it today.. want to get input system sorted out better before moving on, as well as getting
		some sort of tick counters to know CPU usage each frame.. 
1115	switching the test sprite off, will enable layer1 as a 1bpp tile mode.. 
		KERNAL charset loads into $1:F000-$1:F7FF	Charset
TODO 	frame ticker
TODO 	sprite attribute buffer
1800 	OK ... got the sprite attribute buffer working OK .. sweetness.. will have to work on the blitting later
		got a tick counter going on, seems typically at least ~55K cycles or so left in the frame? 30 fps on 160x120 shouldn't
		be issue.. will have to see what the water sim takes up as well as the blitter.

		identified bug with either the emulator or the vera will need to test more ... left some code in the interrupt handler .. 

	commit
2000 	where to put layer0 buffers?? layer1 stuff? 
2240 	stuck is being weird.. head hurts.. prob not going to next object in list correctly.

2024/03/18
0725 	OK getting back on this.. first let's make some controls to enable/disable each layer.. 
		1,2,3 toggle layer1, sprite, layer0
TODO 	add controls to toggle layers
	DONE
0730 	sort out a toggle-able debug view, main view should be only 160x120.. 
TODO	setup a 'debug mode' - make the screen 256x192 with the upper left 160x120 representing the actual intended display.. will have a toggle
	DONE
0845 	was working on switching view to 160x120 but now zig-zag isn't working ... needs fixed.. 
	COMMIT

2024/03/20
0730	OK back at it ... need to fix the zig zagging before can proceed .. 
0930 	ziggy zaggy error is due to check against screen out top.. 
	eek.. gotta go..
	COMMIT 

2024/03/23
0900? 	
1325 	last couple days had been chatting on the forum about color quantization and setting video modes. 

1545 	OK giving up on the dithering stuff. will have to revisit this some other time.. 

2010 	OMG I got dithering working, BW working, and 2/4 color sorta... lol 
	COMMIT 

2024/03/24
0800 	getting back at it.. let's GO!!! 
TODO 	perhaps alter view to be 160x120 ? 
	DONE 		was already switched over but ziggy zaggy broke somewhere.. 
0800 	getting back to fixing the ziggy zaggy ..
		because how things are compared, bottom of screen is really bottom + pixel height we're at.. 
		top of screen is just top of screen, allows looking further if higher.. ok 
		if full screen, top is just "don't be so negative.."

		oh yeah.. full screen 160x120... 
TODO 	undo border tiles to make full screen 160x120
	DONE
0825 	ok back to the ziggy zaggy.. 
BUG 	fix ziggy zaggy - appears error is due to check against screen out top.. 
	DONE
1035 	fixed zig complete
	COMMIT
1115 	fixed small issue with screen top out.. 
	COMMIT 
1120 	for the next trick... sprite blitter.. 
		want to be able to enable/disable sprite blitter.. 
		if objects to sprites is disabled, want to set a sprite to indicate state..
1130 	OK.. 9 enables/disables the sprite objects.. now for the blitter.. 
1330 	instrumented so it keeps bufferB to sort it out. .
1415 	OK.. so far .. so good.. now to commit this bit 
	COMMIT
1530 	OK things mostly working for the moment, just need to smooth out details.. 
		https://youtu.be/dMr8j1CRTt8
	COMMIT

2024/03/25
0630 	oops to write cache values need to actually set DCSEL=6 .. clearning screen working
0800 	making table for doing the line calcs
0930 	ran to work.. was bugged out having seizures
1830 	ok.. let's try that again.. 
TODO 	set go/clear flags for buffer A / buffer B 
	DONE
2115 	Also neg X and neg Y working kinda ... seems most things solved for ..
		software-sprites only / full 64 tall = 60/7 = ~8.57 fps ... 
		with hardware sprites worse case is 20 fps currently.. 
		Really should try to get that back to a solid 30 fps before continuing.. 
	COMMIT

2024/03/26
0650 	OK.. where to start today? 
		should there be some border? would that help at all?? 
		maybe just restrict to "has to be within screen limits"- as in 0 <= x <= screen width -16 ... 
		well, at least world tiles for this.. maybe later.. but definitely is room for some optimizations..
0820 	And its borked for some reason.. hmmm .. totally thrashed.. eh... it needed rewrite .. 
1010 	OK cache align working but need to redo to get neg x/y and actually to size of things..
	COMMIT
1015 	OOPS.. not INC VERA_ADDR_LOW .. need to clear carry .. . hehe

2024/03/27
0625 	OK need to clean house a little.. these are already done.. 
TODO 	sprite base address lookup tables ? or is there faster way? 
	DONE
TODO 	non-aligned sprites.. 
	DONE
0630 	
TODO 	sprites with X<0
	DONE
0640 	
TODO 	sprites with Y<0
	DONE
TODO 	limit sprites to bottom of screen
	DONE
0740 	OK, basically working.. woot! no sprites gets min 10 fps.. 
	COMMIT
0815	start putting in water sim.. set a toggle for it ? like 8 key maybe? 
1000 	started coding water sim calculations.. have half of row1.. lol.. gotta go..

2024/03/28
0806 	more water sim stuff.. 
0910 	ewww gotta run.. 
	COMMIT

2024/03/29
0715	ok back at it.. water sim.. 

.macro calc_downlefts_backwards_for_row_faster row, start, end ; don't use, is not correct if count is odd! 
.proc 
   SELF = TUBWORLD+(64*row)+start ; because start has nothing to the left, needs processed different
   LEFT = SELF-1
   DOWNLEFT = LEFT+64
   DOWNRIGHT = DOWNLEFT+1
   SCRATCH = WATER_CALC_SCRATCH+(64*row)+start
   COUNT = end-start

   LDX #COUNT     ;  2  2
   LDA SELF,X     ;  4  6
   ADC DOWNRIGHT,X ; 4  10
   STA ZP_PTR     ;  3  13    lefts of right
LOOP:
   LDA LEFT,X           ;  4  4
   ADC DOWNLEFT,X       ;  4  8
   STA ZP_PTR+1         ;  3  11    next self
   ADC ZP_PTR           ;  3  14    +prev self
   STA SCRATCH,X        ;  4  18
   DEX                  ;  2  20    
ODD_START:
   LDA LEFT,X           ;  4  24
   ADC DOWNLEFT,X       ;  4  28
   STA ZP_PTR           ;  3  31    next self
   ADC ZP_PTR+1         ;  3  34    prev self
   STA SCRATCH,X        ;  4  38
   DEX                  ;  2  40
   BNE LOOP             ;  ~3   43  /2 =  ~22 per each oops is really same as above.. funny... 
.endproc
.endmacro

0930 	left had to run to work.. faucet wasn't working correct though

1900 	OK set faucet on/off to 7 key
2100 	is bugging but ok

2024/03/30
0500 	working on water sim, sorting out algo / bugs.. 
0815 	committing there in case need to reference? 
	COMMIT
1145 	water sorta working but waves not really propagating.. 
1205 	will need to figure out something better with the water sim...
	COMMIT

1545 	gonna take another crack at it... 
1700 	thinking should add 1 to the height for each neighbor that is larger... 
1935 	nope.. still lost

2024/03/31 	Easter Sunday ! 
0945 	back at it with the water sim stuff... probably <64 is not enough resolution...
		7bit may not be enough either.. 
		base algorithm seems correct though? 
1000 	found little oopsy in the map include.. so south side may get error now.. hehe
1010 	rechecking the algo.. 6 bits should be OK ? should be that add all /8 though ..
1210 	reorg'd and now is broken.. yay.. probably some lookup table not aligned. dumping..
1250 	Reorg'd workng, stopped flashing.. ayya
TODO 	REORG FRAME LOOP / cleanup code.. / tables.. 
	DONE
1340 	first 2 rows of new sim entered in.. seems OK so far.. hard to tell .. 
	COMMIT

1520 	looking back at it.. seems will need to go to 16bit as 64 isn't really enough and 128 doesn't seem would be much better?
		sure, that only adds 4K to this program..  and would have to rejigger stuff? 

2015 	back at it.. let's see.. maybe 8bit with the current tub-world being like a look-aside sorta thing? 
		or do 14bit with current tub-world as the visible part?
2345 	14bit appears to be doing well... ~100 cycles per cell ... 1 jiffy / update.. ok fine.. is what it is
		behavior is just perfect though..
TODO 	test 14bit tub-world performance. 
	DONE
TODO 	test 8bit with look-aside.. 
	SKIP
	COMMIT
2024/04/01
0200 	Currently is in interesting state... like basal evaporation and wave progression mainly there ... 
		stick a few wave particles over this baseline simulation and may just be in business?

0715 	finish up the special cases ... and PRG is getting to be 37K with al the reserved memory, so maybe time to push
		stuff to use banked memory.. 
		banked RAM is 8K at $A000-$BFFF, using address $0 to set the bank.. bank 1 is first user bank (default)
TODO 	switch stuff to banked.. 
	DONE
0755 	Surprizingly was simple.. now PRG is only 31K! joyous.. didn't even zero out first ...
0805 	just kidding! added the zeroing out of rest of the bank..
		WORLD DATA could be compressed and this routine altered ? would also need different update world sim as well.. hmmm
0810 	back at the water sim - need to add in rest of special cases for 14bit .. 
0920 	completed row1 and row2... is there faster way to add 16bit nums thought?
		need to track the carries from the lower bits.. 
		Say want to add 3 16bit numbers A, B , C , storing result in R -  
		LDA A_LOW 	;	4 	4
		ADC B_LOW 	;	4 	8
		STA R_LOW 	;	4 	12
		LDA A_HIGH 	;	4 	16
		ADC B_HIGH 	;	4 	20
		STA R_HIGH 	;	4 	24
		LDA R_LOW 	;	4 	28
		ADC C_LOW 	;	4 	32
		STA R_LOW 	;	4 	36
		LDA R_HIGH ;	4 	40
		ADC C_HIGH ;	4 	44
		STA R_HIGH 	;	4 	48 	;	48! 

		LDY A_HIGH 	; 	4 	4
		LDA A_LOW 	;	4 	8
		ADC B_LOW 	;	4 	12
		BCC :+ 		;	2/3 	14 	/	15
		INY 		;	2/ 		16
		DEC A 		;	2/ 		18
	  	: ADC C_LOW ; 	4 		22 		19 ;	
	  	STA R_LOW 	;	4 		26 		23
	  	TYA 		;	2 		28 		25
	  	ADC C_HIGH  ; 	4 		32 		29
	  	STA R_HIGH 	;	4 		36 		33 	... 	umm.. wow... 

	  	old method 4 numbers starting with ABS lookups = 64.. using ZP intermediary for R? 56? 
	  	LDY A_HIGH 	;	4 	4
	  	LDA A_LOW 	;	4 	8
	  	ADC B_LOW 	; 	4 	12
	  	BCC :+ 		;	2/3 	14 	/	15
	  	INY 		;	2/ 		16
	  	DEC A 		;	2/ 		18
	  	: ADC C_LOW ; 	4 		22 		19
	  	BCC :+ 		; 	2/3 	24 		22
	  	INY 		;	2/ 		26 		24
	  	DEC A 		; 	2/ 		28 		
	  	: ADC D_LOW ; 	2 		30 		26
	  	STA R_LOW 	;	4 		34 		30
	  	TYA 		;	2 		36 		34
	  	ADC B_HIGH  ; 	4 		40 		38
	  	ADC C_HIGH 	; 	4 		44 		42
	  	ADC D_HIGH ; 	4 		48 		46
	  	STA R_HIGH ; 	4 		52 		50 		;	saves at least 4-6 cycles... potentially ditch the DEC A for 6-8 cycle shave?


1045 	OK through row 7 special cases completed, through row 6 ready to go..?
1115 	appears some issue with row 4-6 .. 
1140 	Oh... I wasn't actually writing out downrights.. 
	COMMIT 
1255 	ok back to it I guess.. 
1430 	OK marking this as done for now maybe.. implement the roaming around bobbin?
TODO 	Water Sim
	COMMIT


TODO 	alternative WORLD DATA format and update functions... 
TODO 	SPAN buffer thing / avoid overdraw
TODO 	implement faster maths for the buffer writing.. 
TODO 	alternate assets for off-by-one pixel cache writing?
TODO 	optimize object list - use classes, store less data within each object..
TODO 	blitting extra objects to buffer

BUG 	WHY can't copy to sprite attribute table using cache writes and have it work? is just weird... 
TODO 	Proper keyboard buffer / driver
TODO 	SNES controller inputs

TODO 	make moving around by X/Y/Z work 


TOOD 	add dithering to the color quantization stuff for 1-bit and 2-bit especially
TODO 	proper 1 and 2 bit color mode outputs